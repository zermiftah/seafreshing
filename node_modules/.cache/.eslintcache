[{"M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\index.js":"1","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\App.js":"2","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\Checkout.js":"3","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\Login.js":"4","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\HomeScreen.js":"5","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\ShippingScreen.js":"6","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\SingleProduct.js":"7","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\CartScreen.js":"8","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\ProfileScreen.js":"9","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\Register.js":"10","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\PlaceOrderScreen.js":"11","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\Dashboard.js":"12","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\OrderScreen.js":"13","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\PaymentScreen.js":"14","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\Search.js":"15","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\NotFound.js":"16","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\KioskScreen.js":"17","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\Profile.js":"18","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\Freezer.js":"19","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\DetailProduct.js":"20","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\ProductList.js":"21","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\Wishlist.js":"22","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\Chat.js":"23","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\HeaderHS.js":"24","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\Footers.js":"25","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\TrendingProduct\\TrendingProduct.js":"26","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\middleware\\guest\\index.js":"27","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\middleware\\auth\\index.js":"28","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\Header.js":"29","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\Catageory\\Category.js":"30","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\Banner\\Banner.js":"31","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\homeComponents\\ShopSection.js":"32","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\NewArrival\\NewArrival.js":"33","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\simple.jsx":"34","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\CTA\\CTA.js":"35","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\profileComponents\\Wishlist.js":"36","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\LoadingError\\Error.js":"37","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\profileComponents\\Orders.js":"38","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\profileComponents\\ProfileTabs.js":"39","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\profileComponents\\Kiosk.js":"40","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\homeComponents\\Rating.js":"41","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\Spinner.js":"42"},{"size":174,"mtime":1651803960000,"results":"43","hashOfConfig":"44"},{"size":3747,"mtime":1652182943693,"results":"45","hashOfConfig":"44"},{"size":28155,"mtime":1652535712091,"results":"46","hashOfConfig":"44"},{"size":5141,"mtime":1651924999725,"results":"47","hashOfConfig":"44"},{"size":652,"mtime":1651837434000,"results":"48","hashOfConfig":"44"},{"size":1021,"mtime":1650623348000,"results":"49","hashOfConfig":"44"},{"size":9320,"mtime":1652094239577,"results":"50","hashOfConfig":"44"},{"size":7341,"mtime":1652082303856,"results":"51","hashOfConfig":"44"},{"size":7426,"mtime":1652082386392,"results":"52","hashOfConfig":"44"},{"size":6764,"mtime":1651925937527,"results":"53","hashOfConfig":"44"},{"size":4650,"mtime":1650623348000,"results":"54","hashOfConfig":"44"},{"size":624,"mtime":1651829784000,"results":"55","hashOfConfig":"44"},{"size":9330,"mtime":1650623348000,"results":"56","hashOfConfig":"44"},{"size":1076,"mtime":1650623348000,"results":"57","hashOfConfig":"44"},{"size":14478,"mtime":1652176823127,"results":"58","hashOfConfig":"44"},{"size":1524,"mtime":1651842782000,"results":"59","hashOfConfig":"44"},{"size":31275,"mtime":1652269987964,"results":"60","hashOfConfig":"44"},{"size":13086,"mtime":1652253598484,"results":"61","hashOfConfig":"44"},{"size":11861,"mtime":1652535470715,"results":"62","hashOfConfig":"44"},{"size":16589,"mtime":1652333418508,"results":"63","hashOfConfig":"44"},{"size":15325,"mtime":1651809664000,"results":"64","hashOfConfig":"44"},{"size":15082,"mtime":1651846930000,"results":"65","hashOfConfig":"44"},{"size":10302,"mtime":1652433577267,"results":"66","hashOfConfig":"44"},{"size":16131,"mtime":1652183297530,"results":"67","hashOfConfig":"44"},{"size":5312,"mtime":1651829814000,"results":"68","hashOfConfig":"44"},{"size":3237,"mtime":1651841958000,"results":"69","hashOfConfig":"44"},{"size":288,"mtime":1650623348000,"results":"70","hashOfConfig":"44"},{"size":353,"mtime":1650623348000,"results":"71","hashOfConfig":"44"},{"size":8573,"mtime":1651815504000,"results":"72","hashOfConfig":"44"},{"size":22518,"mtime":1652104664291,"results":"73","hashOfConfig":"44"},{"size":4396,"mtime":1651807234000,"results":"74","hashOfConfig":"44"},{"size":2016,"mtime":1652082514788,"results":"75","hashOfConfig":"44"},{"size":8683,"mtime":1651834532000,"results":"76","hashOfConfig":"44"},{"size":2509,"mtime":1651924508017,"results":"77","hashOfConfig":"44"},{"size":5475,"mtime":1651829748000,"results":"78","hashOfConfig":"44"},{"size":2846,"mtime":1651228092000,"results":"79","hashOfConfig":"44"},{"size":229,"mtime":1650623348000,"results":"80","hashOfConfig":"44"},{"size":1766,"mtime":1650792986000,"results":"81","hashOfConfig":"44"},{"size":3057,"mtime":1650623348000,"results":"82","hashOfConfig":"44"},{"size":17053,"mtime":1651240336000,"results":"83","hashOfConfig":"44"},{"size":1201,"mtime":1650623348000,"results":"84","hashOfConfig":"44"},{"size":453,"mtime":1651240086000,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"1fr097n",{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"89"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"89"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"89"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"89"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"89"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"89"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"89"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"89"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"89"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"89"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"89"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"89"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"89"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"89"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"89"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\index.js",[],[],[],"M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\App.js",["228","229"],[],"M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\Checkout.js",["230","231","232","233","234","235","236","237","238","239","240","241","242","243","244"],[],"M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\Login.js",["245","246","247"],[],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Header from \"./../components/Header\";\r\nimport axios from 'axios'\r\nimport Notif from '../components/simple'\r\n\r\nconst Login = () => {\r\n  window.scrollTo(0, 0);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [notif, setNotif] = useState({\r\n    error: '',\r\n    success: '',\r\n  });\r\n  const history = useHistory();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    const qs = require('qs');\r\n    let data = new FormData();\r\n    data.append('id', email);\r\n    data.append('password', password);\r\n\r\n    try {\r\n      let response = await axios.post('https://server.seafreshing.com/api/user/login', data)\r\n      if (response.data) {\r\n        localStorage.setItem('token', JSON.stringify(response.data.token))\r\n        localStorage.setItem('user-data', JSON.stringify(response.data.user))\r\n        setNotif({\r\n          error: '',\r\n          success: response.data.msg,\r\n        })\r\n      }\r\n      setTimeout(() => {\r\n        history.push('/HomeScreen')\r\n      }, 3000)\r\n    } catch (e) {\r\n      if (e.response.data.msg) setNotif({\r\n        error: e.response.data.msg,\r\n        success: '',\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\r\n        notif.success && (\r\n          <Notif title={notif.success} text=\"Redirect...\" />\r\n        )\r\n      }\r\n      {\r\n        notif.error && (\r\n          <Notif title='Error' text={notif.error} />\r\n        )\r\n      }\r\n      <div class=\"bg-white dark:bg-gray-900\">\r\n        <div class=\"flex justify-center h-screen\">\r\n          <div class=\"hidden bg-cover lg:block lg:w-2/3\" style={{ backgroundImage: `url(https://img.freepik.com/free-photo/top-view-variety-fresh-fish-seafood-ice-with-copy-apace_126277-771.jpg?w=1060)` }}>\r\n            <div class=\"flex items-center h-full px-20 bg-gray-900 bg-opacity-40\">\r\n              <div>\r\n                <h2 class=\"text-4xl font-bold text-white\">Seafreshing</h2>\r\n\r\n                <p class=\"max-w-xl mt-3 text-gray-300\">Lorem ipsum dolor sit, amet consectetur adipisicing elit. In autem ipsa, nulla laboriosam dolores, repellendus perferendis libero suscipit nam temporibus molestiae</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"flex items-center w-full max-w-md px-6 mx-auto lg:w-2/6\">\r\n            <div class=\"flex-1\">\r\n              <div class=\"text-center\">\r\n                <h2 class=\"text-4xl font-bold text-center text-sky-400 dark:text-white\">Seafreshing</h2>\r\n\r\n                <p class=\"mt-3 text-gray-500 dark:text-gray-300\">Sign in to access your account</p>\r\n              </div>\r\n\r\n              <div class=\"mt-8\">\r\n                <form onSubmit={handleLogin}>\r\n                  <div>\r\n                    <label for=\"email\" class=\"block mb-2 text-sm text-gray-600 dark:text-gray-200\">Email Address</label>\r\n                    <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"example@example.com\" class=\"block w-full px-4 py-2 mt-2 text-gray-700 placeholder-gray-400 bg-white border border-gray-200 rounded-md dark:placeholder-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:border-gray-700 focus:border-blue-400 dark:focus:border-blue-400 focus:ring-blue-400 focus:outline-none focus:ring focus:ring-opacity-40\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n                  </div>\r\n\r\n                  <div class=\"mt-6\">\r\n                    <div class=\"flex justify-between mb-2\">\r\n                      <label for=\"password\" class=\"text-sm text-gray-600 dark:text-gray-200\">Password</label>\r\n                      <a href=\"#\" class=\"text-sm text-gray-400 focus:text-blue-500 hover:text-blue-500 hover:underline\">Forgot password?</a>\r\n                    </div>\r\n\r\n                    <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Your Password\" class=\"block w-full px-4 py-2 mt-2 text-gray-700 placeholder-gray-400 bg-white border border-gray-200 rounded-md dark:placeholder-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:border-gray-700 focus:border-blue-400 dark:focus:border-blue-400 focus:ring-blue-400 focus:outline-none focus:ring focus:ring-opacity-40\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n                  </div>\r\n\r\n                  <div class=\"mt-6\">\r\n                    <button type=\"submit\"\r\n                      class=\"w-full px-4 py-2 tracking-wide text-white transition-colors duration-200 transform bg-blue-500 rounded-md hover:bg-blue-400 focus:outline-none focus:bg-blue-400 focus:ring focus:ring-blue-300 focus:ring-opacity-50\">\r\n                      Sign in\r\n                    </button>\r\n                  </div>\r\n\r\n                </form>\r\n\r\n                <p class=\"mt-6 text-sm text-center text-gray-400\">Don&#x27;t have an account yet? <Link className=\"text-blue-500 focus:outline-none focus:underline hover:underline\" to={\"/register\"}>Sign up</Link>.</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\HomeScreen.js",["248"],[],"import { React, Fragment } from \"react\";\r\nimport HeaderHS from \"../components/HeaderHS\";\r\nimport ShopSection from \"./../components/homeComponents/ShopSection\";\r\nimport Footer from \"./../components/Footers\";\r\nimport Banner from \"../components/Banner/Banner\";\r\nimport Category from \"../components/Catageory/Category\";\r\nimport NewArrival from \"../components/NewArrival/NewArrival\";\r\nimport CTA from \"../components/CTA/CTA\";\r\n\r\nconst HomeScreen = () => {\r\n  return (\r\n    <Fragment>\r\n      <HeaderHS />\r\n      <Banner />\r\n      <Category />\r\n      <NewArrival />\r\n      <CTA />\r\n      <Footer />\r\n    </Fragment>\r\n\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\ShippingScreen.js",[],[],"M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\SingleProduct.js",["249","250","251"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Header from \"./../components/Header\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Message from \"./../components/LoadingError/Error\";\r\nimport axios from \"axios\";\r\nimport HeaderHS from \"../components/HeaderHS\";\r\n\r\n\r\nconst SingleProduct = ({ match }) => {\r\n  const [product, setProduct] = useState([])\r\n  const [quantity, setQuantity] = useState(0);\r\n  const userData = JSON.parse(localStorage.getItem('user-data'));\r\n  const token = JSON.parse(localStorage.getItem('token'));\r\n  const qs = require('qs');\r\n\r\n  useEffect(() => {\r\n    fetchproduct();\r\n  }, []);\r\n\r\n  const fetchproduct = async () => {\r\n    try {\r\n      const data = await axios.get(`https://server.seafreshing.com/api/product/get-product/${match.params.id}`)\r\n      let temp = data.data.product;\r\n      setProduct(temp)\r\n    } catch (e) {\r\n      return e.response.data.msg\r\n    }\r\n  }\r\n\r\n  const handleAddToCart = async () => {\r\n    try {\r\n      let response = await axios.patch('https://server.seafreshing.com/api/user/add-freezer', JSON.stringify({\r\n        'clearPrice': product[0].price.value.replace(/\\D/g, ''),\r\n        'productId': match.params.id,\r\n        'image': product[0].image[0].imgUrl,\r\n        'name': product[0].productName,\r\n        'price': product[0].price.value,\r\n        'priceUnit': \"Kg\",\r\n        'productQuantity': 12,\r\n        'kioskName': product[0].kioskName,\r\n        'kioskId': product[0].kioskId,\r\n        'idUser': userData.id,\r\n        'kioskCity': product[0].kioskDetails[0].city,\r\n        'minimumOrder': product[0].minimumOrder.total,\r\n        'isWholesalePrice': product[0].isWholesalePrice,\r\n        'isChecked': true,\r\n      }), {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'auth-token': token,\r\n        }\r\n      });\r\n      // console.log(response.data)\r\n    } catch (e) {\r\n      console.log(e)\r\n      console.log(e.response.data)\r\n    }\r\n  }\r\n\r\n  const handleAddWishlist = async () => {\r\n    try {\r\n      let response = await axios.patch('https://server.seafreshing.com/api/user/add-wishlist', {\r\n        'id': userData.id,\r\n        'productId': match.params.id,\r\n        'image': product[0].image[0].imgUrl,\r\n        'name': product[0].productName,\r\n        'price': product[0].price.value,\r\n        'rating': '',\r\n        'productQuantity': quantity,\r\n        'priceUnit': \"Kg\",\r\n        'kioskName': product[0].kioskName,\r\n        'kioskId': product[0].kioskId,\r\n        'idUser': userData.id,\r\n        'kioskCity': product[0].kioskDetails[0].city,\r\n        'minimumOrder': product[0].minimumOrder.total,\r\n        'isWholesale': product[0].isWholesalePrice,\r\n      }, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'auth-token': token,\r\n        }\r\n      });\r\n      console.log(response.data)\r\n    } catch (e) {\r\n      console.log(e)\r\n      console.log(e.response.data)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\r\n        token ?\r\n          <HeaderHS />\r\n          :\r\n          <Header />\r\n      }\r\n      {\r\n        product[0] ?\r\n          <div className=\"container single-product\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"single-image\">\r\n                  <img src={product[0].image[0].imgUrl} alt={product.productName} />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"product-dtl\">\r\n                  <div className=\"product-info\">\r\n                    <div className=\"product-name\">{product[0].productName}</div>\r\n                  </div>\r\n                  <p>{product[0].productDescription}</p>\r\n\r\n                  <div className=\"product-count col-lg-7 \">\r\n                    <div className=\"flex-box d-flex justify-content-between align-items-center\">\r\n                      <h6>Price</h6>\r\n                      <span>{product[0].price.value}</span>\r\n                    </div>\r\n                    <div className=\"flex-box d-flex justify-content-between align-items-center\">\r\n                      <h6>Status</h6>\r\n                      {\r\n                        product[0].availableStock.total > 0 ? (\r\n                          <span>In Stock</span>\r\n                        ) : (\r\n                          <span>unavailable</span>\r\n                        )\r\n                      }\r\n                    </div>\r\n                    <div className=\"flex-box d-flex justify-content-between align-items-center\">\r\n                      <h6>Reviews</h6>\r\n                    </div>\r\n                    {\r\n                      product[0].availableStock.total > 0 ? (\r\n                        <>\r\n                          <div className=\"flex-box d-flex justify-content-between align-items-center\">\r\n                            <h6>Quantity</h6>\r\n                            <select value={quantity} onChange={(e) => setQuantity(e.target.value)} required>\r\n                              <option selected>Select Quantity</option>\r\n                              {\r\n                                [...Array(product[0].availableStock.total).keys()].map((x) => (\r\n                                  <option key={x + 1} value={x + 1}>\r\n                                    {x + 1}\r\n                                  </option>\r\n                                ))\r\n                              }\r\n                            </select>\r\n                          </div>\r\n                          {\r\n                            userData ?\r\n                              <div className=\"d-flex justify-content-between gap-1\">\r\n                                <button onClick={handleAddWishlist} className=\"round-black-btn\">Wishlist</button>\r\n                                <button onClick={handleAddToCart} className=\"round-black-btn\">Add To Cart</button>\r\n                              </div>\r\n                              :\r\n                              <Link to='/login' className=\"d-flex justify-content-center\">You must login to add to cart</Link>\r\n                          }\r\n                        </>\r\n                      ) : null\r\n                    }\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* RATING */}\r\n            <div className=\"row my-5\">\r\n              <div className=\"col-md-6\">\r\n                <h6 className=\"mb-3\">REVIEWS</h6>\r\n                <Message variant={\"alert-info mt-3\"}>No Reviews</Message>\r\n                <div className=\"mb-5 mb-md-3 bg-light p-3 shadow-sm rounded\">\r\n                  <strong>{product[0].kioskName}</strong>\r\n\r\n                  <span>Jan 12 2021</span>\r\n                  <div className=\"alert alert-info mt-3\">\r\n                    Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                    industry. Lorem Ipsum has been the industry's standard dummy\r\n                    text ever since the 1500s, when an unknown printer took a galley\r\n                    of type and scrambled it to make a type specimen book\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                {\r\n                  userData ?\r\n                    <>\r\n                      <h6>WRITE A CUSTOMER REVIEW</h6>\r\n                      <div className=\"my-4\"></div>\r\n\r\n                      <form>\r\n                        <div className=\"my-4\">\r\n                          <strong>Rating</strong>\r\n                          <select className=\"col-12 bg-light p-3 mt-2 border-0 rounded\">\r\n                            <option value=\"\">Select...</option>\r\n                            <option value=\"1\">1 - Poor</option>\r\n                            <option value=\"2\">2 - Fair</option>\r\n                            <option value=\"3\">3 - Good</option>\r\n                            <option value=\"4\">4 - Very Good</option>\r\n                            <option value=\"5\">5 - Excellent</option>\r\n                          </select>\r\n                        </div>\r\n                        <div className=\"my-4\">\r\n                          <strong>Comment</strong>\r\n                          <textarea\r\n                            row=\"3\"\r\n                            className=\"col-12 bg-light p-3 mt-2 border-0 rounded\"\r\n                          ></textarea>\r\n                        </div>\r\n                        <div className=\"my-3\">\r\n                          <button className=\"col-12 bg-black border-0 p-3 rounded text-white\">\r\n                            SUBMIT\r\n                          </button>\r\n                        </div>\r\n                      </form>\r\n                    </>\r\n                    :\r\n                    <>\r\n                      <div className=\"my-3\">\r\n                        <Message variant={\"alert-warning\"}>\r\n                          Please{\" \"}\r\n                          <Link to=\"/login\">\r\n                            \" <strong>Login</strong> \"\r\n                          </Link>{\" \"}\r\n                          to write a review{\" \"}\r\n                        </Message>\r\n                      </div>\r\n                    </>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n          : \"Loading...\"\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleProduct;\r\n","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\CartScreen.js",["252","253"],[],"import React, { useEffect, useState } from \"react\";\r\nimport HeaderHS from \"../components/HeaderHS\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst CartScreen = () => {\r\n  window.scrollTo(0, 0);\r\n  const [items, setItems] = useState([]);\r\n  const [quantity, setQuantity] = useState(0);\r\n  const token = JSON.parse(localStorage.getItem('token'));\r\n  const userData = JSON.parse(localStorage.getItem('user-data'));\r\n  console.log(items)\r\n  useEffect(() => {\r\n    getFreezer();\r\n  }, [])\r\n\r\n  const getFreezer = async () => {\r\n    try {\r\n      let response = await axios.get(`https://server.seafreshing.com/api/user/get-freezer/${userData.id}`, {\r\n        headers: {\r\n          'auth-token': token,\r\n        }\r\n      });\r\n      setItems(response.data.freezer);\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const totPrice = items.reduce((total, item) => {\r\n    total += (item.product[0].clearPrice)\r\n    return total;\r\n  }, 0);\r\n\r\n  const removeItem = async (freezerId, productId) => {\r\n    try {\r\n      let response = await axios.delete('https://server.seafreshing.com/api/user/delete-freezer', {\r\n        headers: {\r\n          'auth-token': token,\r\n        }\r\n      }, {\r\n        'id': userData.id,\r\n        \"freezer.id\": freezerId,\r\n        'productId': productId,\r\n\r\n      });\r\n      console.log(response.data)\r\n    } catch (e) {\r\n      console.log(e)\r\n      console.log(e.response.data)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HeaderHS />\r\n      {/* Cart */}\r\n      <div className=\"container\">\r\n        {\r\n          items ?\r\n            items.length === 0 ?\r\n              <div className=\" alert alert-info text-center mt-3\">\r\n                Your cart is empty\r\n                <Link\r\n                  className=\"btn btn-success mx-5 px-5 py-3\"\r\n                  to=\"/\"\r\n                  style={{\r\n                    fontSize: \"12px\",\r\n                  }}\r\n                >\r\n                  SHOPPING NOW\r\n                </Link>\r\n              </div>\r\n              :\r\n              <>\r\n                <div className=\" alert alert-info text-center mt-3\">\r\n                  Total Cart Products\r\n                  <Link className=\"text-success mx-2\" to=\"/cart\">\r\n                    {items.length}\r\n                  </Link>\r\n                </div>\r\n                {/* cartiterm */}\r\n                {\r\n                  items.map((item) => (\r\n                    <>\r\n                      {\r\n                        item.kioskName && item.product.length !== 0 ?\r\n                          item.product.map(product => (\r\n                            <div className=\"cart-iterm row\" key={product.id}>\r\n                              <div onClick={() => removeItem(product.id, product.id)} className=\"remove-button d-flex justify-content-center align-items-center\">\r\n                                <i className=\"fas fa-times\"></i>\r\n                              </div>\r\n                              <div className=\"cart-image col-md-3\">\r\n                                <img src={product.image} alt={product.name} />\r\n                              </div>\r\n                              <div className=\"cart-text col-md-5 d-flex align-items-center\">\r\n                                <Link to=\"#\">\r\n                                  <h4>{product.name}</h4>\r\n                                </Link>\r\n                              </div>\r\n                              <div className=\"cart-qty col-md-2 col-sm-5 mt-md-5 mt-3 mt-md-0 d-flex flex-column justify-content-center\">\r\n                                <h6>QUANTITY</h6>\r\n                                <select onChange={(e) => setQuantity(e.target.value)}>\r\n                                  {\r\n                                    <option value={product.productQuantity}>\r\n                                      {product.productQuantity}\r\n                                    </option>\r\n                                  }\r\n                                </select>\r\n                              </div>\r\n                              <div className=\"cart-price mt-3 mt-md-0 col-md-2 align-items-sm-end align-items-start  d-flex flex-column justify-content-center col-sm-7\">\r\n                                <h6>SUBTOTAL</h6>\r\n                                <h4>{`Rp. ${product.clearPrice * product.productQuantity}`}</h4>\r\n                              </div>\r\n                            </div>\r\n                          ))\r\n                          :\r\n                          <div className=\"cart-iterm row\" key={item.id}>\r\n                            <div onClick={() => removeItem(item.id, item.product[0].id)} className=\"remove-button d-flex justify-content-center align-items-center\">\r\n                              <i className=\"fas fa-times\"></i>\r\n                            </div>\r\n                            <div className=\"cart-image col-md-3\">\r\n                              <img src={item.product[0].image} alt={item.product[0].name} />\r\n                            </div>\r\n                            <div className=\"cart-text col-md-5 d-flex align-items-center\">\r\n                              <Link to=\"#\">\r\n                                <h4>{item.product[0].name}</h4>\r\n                              </Link>\r\n                            </div>\r\n                            <div className=\"cart-qty col-md-2 col-sm-5 mt-md-5 mt-3 mt-md-0 d-flex flex-column justify-content-center\">\r\n                              <h6>QUANTITY</h6>\r\n                              <select onChange={(e) => setQuantity(e.target.value)}>\r\n                                {\r\n                                  <option value={item.product[0].productQuantity}>\r\n                                    {item.product[0].productQuantity}\r\n                                  </option>\r\n                                }\r\n                              </select>\r\n                            </div>\r\n                            <div className=\"cart-price mt-3 mt-md-0 col-md-2 align-items-sm-end align-items-start  d-flex flex-column justify-content-center col-sm-7\">\r\n                              <h6>SUBTOTAL</h6>\r\n                              <h4>{`Rp. ${item.product[0].clearPrice * item.product[0].productQuantity}`}</h4>\r\n                            </div>\r\n                          </div>\r\n                      }\r\n                    </>\r\n                  ))\r\n                }\r\n\r\n                {/* End of cart iterms */}\r\n                <div className=\"total\">\r\n                  <span className=\"sub\">total:</span>\r\n                  <span className=\"total-price\">{`Rp ${totPrice}`}</span>\r\n                </div>\r\n                <hr />\r\n                <div className=\"cart-buttons d-flex align-items-center row\">\r\n                  <Link to=\"/\" className=\"col-md-6 \">\r\n                    <button>Continue To Shopping</button>\r\n                  </Link>\r\n                  <div className=\"col-md-6 d-flex justify-content-md-end mt-3 mt-md-0\">\r\n                    <button>\r\n                      <Link to=\"/shipping\" className=\"text-white\">\r\n                        Checkout\r\n                      </Link>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            :\r\n            \"Loading...\"\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\ProfileScreen.js",["254"],[],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport HeaderHS from \"../components/HeaderHS\";\r\nimport ProfileTabs from \"../components/profileComponents/ProfileTabs\";\r\nimport Wishlist from \"../components/profileComponents/Wishlist\";\r\nimport Orders from \"./../components/profileComponents/Orders\";\r\nimport { FaStore } from \"react-icons/fa\";\r\nimport Kiosk from \"../components/profileComponents/Kiosk\";\r\n\r\nconst ProfileScreen = () => {\r\n  window.scrollTo(0, 0);\r\n\r\n  const [user, setUser] = useState([]);\r\n  const userData = JSON.parse(localStorage.getItem('user-data'));\r\n  const [getOrders, setOrders] = useState([]);\r\n  const [getWishlist, setWishlist] = useState([]);\r\n  const token = JSON.parse(localStorage.getItem('token'));\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n    getOrdersData();\r\n    getWishlistData();\r\n  }, [])\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      const response = await axios.get(`https://server.seafreshing.com/api/user/get-user/${userData.accounttype}/${userData.id}`, {\r\n        headers: {\r\n          'auth-token': JSON.parse(localStorage.getItem('token')),\r\n        }\r\n      })\r\n      setUser(response.data.user)\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  const getOrdersData = async () => {\r\n    try {\r\n      let response = await axios.get('https://server.seafreshing.com/api/user/get-transaction-test');\r\n      setOrders(response.data)\r\n    } catch (e) {\r\n      console.log(e)\r\n      console.log(e.response.data)\r\n    }\r\n  }\r\n\r\n  const getWishlistData = async () => {\r\n    try {\r\n      let response = await axios.get(`https://server.seafreshing.com/api/user/get-wishlist/${userData.accounttype}/${userData.id}`, {\r\n        headers: {\r\n          'auth-token': token,\r\n        }\r\n      });\r\n      setWishlist(response.data.wishlist[0].wishlist)\r\n      console.log(response.data.wishlist)\r\n    } catch (e) {\r\n      console.log(e)\r\n      console.log(e.response)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HeaderHS />\r\n      <div className=\"container mt-lg-5 mt-3 mb-3\">\r\n        <div className=\"row align-items-start\">\r\n          <div className=\"col-lg-4 p-0 shadow \">\r\n            <div className=\"author-card pb-0 pb-md-3\">\r\n              <div className=\"author-card-cover\"></div>\r\n              <div className=\"author-card-profile row\">\r\n                <div className=\"author-card-avatar col-md-5\">\r\n                  <img src={user.profile} alt=\"userprofileimage\" />\r\n                </div>\r\n                <div className=\"author-card-details col-md-7\">\r\n                  <h5 className=\"author-card-name mb-2\">\r\n                    <strong>{user.fullname}</strong>\r\n                  </h5>\r\n                  <span className=\"author-card-position\">\r\n                    <>Joined Dec 12 2021</>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"px-4 py-2 bg-info\">\r\n              <div className=\"d-flex justify-content-start align-items-center gap-2 mb-3\">\r\n                <span><FaStore /></span>\r\n                <span><strong>Kiosk</strong></span>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <h5>Earn extra income</h5>\r\n                <p>Create a kiosk and start selling on Seafreshing to earn income.</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"wizard pt-3 \">\r\n              <div className=\"d-flex align-items-start\">\r\n                <div\r\n                  className=\"nav align-items-start flex-column col-12 nav-pills me-3 \"\r\n                  id=\"v-pills-tab\"\r\n                  role=\"tablist\"\r\n                  aria-orientation=\"vertical\"\r\n                >\r\n                  <button\r\n                    className=\"nav-link\"\r\n                    id=\"v-pills-kiosk-tab\"\r\n                    data-bs-toggle=\"pill\"\r\n                    data-bs-target=\"#v-pills-kiosk\"\r\n                    type=\"button\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-kiosk\"\r\n                    aria-selected=\"false\"\r\n                  >\r\n                    Open Kiosk\r\n                  </button>\r\n                  <button\r\n                    className=\"nav-link active\"\r\n                    id=\"v-pills-home-tab\"\r\n                    data-bs-toggle=\"pill\"\r\n                    data-bs-target=\"#v-pills-home\"\r\n                    type=\"button\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-home\"\r\n                    aria-selected=\"false\"\r\n                  >\r\n                    Profile Settings\r\n                  </button>\r\n                  <button\r\n                    className=\"nav-link d-flex justify-content-between\"\r\n                    id=\"v-pills-profile-tab\"\r\n                    data-bs-toggle=\"pill\"\r\n                    data-bs-target=\"#v-pills-profile\"\r\n                    type=\"button\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-profile\"\r\n                    aria-selected=\"false\"\r\n                  >\r\n                    Orders List\r\n                    {\r\n                      getOrders.length === 0 ?\r\n                        null\r\n                        :\r\n                        <span className=\"badge2\">{getOrders.length}</span>\r\n                    }\r\n                  </button>\r\n                  <button\r\n                    className=\"nav-link d-flex justify-content-between\"\r\n                    id=\"v-pills-wishlist-tab\"\r\n                    data-bs-toggle=\"pill\"\r\n                    data-bs-target=\"#v-pills-wishlist\"\r\n                    type=\"button\"\r\n                    role=\"tab\"\r\n                    aria-controls=\"v-pills-wishlist\"\r\n                    aria-selected=\"false\"\r\n                  >\r\n                    Wishlist\r\n                    {\r\n                      getWishlist.length === 0 ?\r\n                        null\r\n                        :\r\n                        <span className=\"badge2\">{getWishlist.length}</span>\r\n                    }\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* panels */}\r\n          <div\r\n            className=\"tab-content col-lg-8 pb-5 pt-lg-0 pt-3\"\r\n            id=\"v-pills-tabContent\"\r\n          >\r\n            <div\r\n              className=\"tab-pane fade\"\r\n              id=\"v-pills-kiosk\"\r\n              role=\"tabpanel\"\r\n              aria-labelledby=\"v-pills-kiosk-tab\"\r\n            >\r\n              <Kiosk />\r\n            </div>\r\n            <div\r\n              className=\"tab-pane fade show active\"\r\n              id=\"v-pills-home\"\r\n              role=\"tabpanel\"\r\n              aria-labelledby=\"v-pills-home-tab\"\r\n            >\r\n              <ProfileTabs userData={user} />\r\n            </div>\r\n            <div\r\n              className=\"tab-pane fade\"\r\n              id=\"v-pills-profile\"\r\n              role=\"tabpanel\"\r\n              aria-labelledby=\"v-pills-profile-tab\"\r\n            >\r\n              <Orders orderList={getOrders} />\r\n            </div>\r\n            <div\r\n              className=\"tab-pane fade\"\r\n              id=\"v-pills-wishlist\"\r\n              role=\"tabpanel\"\r\n              aria-labelledby=\"v-pills-wishlist-tab\"\r\n            >\r\n              <Wishlist getWishlist={getWishlist} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\Register.js",["255","256","257"],[],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Header from \"./../components/Header\";\r\nimport axios from 'axios';\r\nimport Notif from '../components/simple'\r\n\r\nconst Register = () => {\r\n  const [fullname, setFullName] = useState('');\r\n  const [mobilenumber, setMobileNumber] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const history = useHistory();\r\n  const [notif, setNotif] = useState('');\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    let qs = require('qs');\r\n    \r\n    try {\r\n      let response = await axios.post('https://server.seafreshing.com/api/user/register', qs.stringify({\r\n        'name': fullname,\r\n        'mobilenumber': mobilenumber,\r\n        'email': email,\r\n        'requestId': password,\r\n      }), {\r\n        header: {\r\n          'Content-Type': 'application/json',\r\n        }\r\n      });\r\n      if (response.data) {\r\n        setNotif(response.data.msg)\r\n      }\r\n    } catch (e) {\r\n      console.log(e.response.data)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* <Header />\r\n      <div className=\"container d-flex flex-column justify-content-center align-items-center login-center\">\r\n        <form onSubmit={handleRegister} className=\"Login col-md-8 col-lg-4 col-11\">\r\n          <input type=\"text\" placeholder=\"Fullname\" value={fullname} onChange={(e) => setFullName(e.target.value)} required />\r\n          <input type=\"text\" placeholder=\"Mobile\" value={mobilenumber} onChange={(e) => setMobileNumber(e.target.value)} required />\r\n          <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n\r\n          <button type=\"submit\">Register</button>\r\n          <p>\r\n            <Link to={\"/login\"}>\r\n              I Have Account <strong>Login</strong>\r\n            </Link>\r\n          </p>\r\n        </form>\r\n      </div> */}\r\n      {\r\n        notif && (\r\n          <Notif title=\"Register\" text={notif} />\r\n        )\r\n      }\r\n      <div class=\"bg-white dark:bg-gray-900\">\r\n        <div class=\"flex justify-center h-screen\">\r\n          <div class=\"hidden bg-cover lg:block lg:w-2/3\" style={{ backgroundImage: `url(https://img.freepik.com/free-photo/top-view-variety-fresh-fish-seafood-ice-with-copy-apace_126277-771.jpg?w=1060)` }}>\r\n            <div class=\"flex items-center h-full px-20 bg-gray-900 bg-opacity-40\">\r\n              <div>\r\n                <h2 class=\"text-4xl font-bold text-white\">Seafreshing</h2>\r\n\r\n                <p class=\"max-w-xl mt-3 text-gray-300\">Lorem ipsum dolor sit, amet consectetur adipisicing elit. In autem ipsa, nulla laboriosam dolores, repellendus perferendis libero suscipit nam temporibus molestiae</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"flex items-center w-full max-w-md px-6 mx-auto lg:w-2/6\">\r\n            <div class=\"flex-1\">\r\n              <div class=\"text-center\">\r\n                <h2 class=\"text-4xl font-bold text-center text-sky-400 dark:text-white\">Seafreshing</h2>\r\n\r\n                <p class=\"mt-3 text-gray-500 dark:text-gray-300\">Sign up to access your account</p>\r\n              </div>\r\n\r\n              <div class=\"mt-8\">\r\n                <form onSubmit={handleRegister}>\r\n                  <div>\r\n                    <label for=\"fullname\" class=\"block mb-2 text-sm text-gray-600 dark:text-gray-200\">Full Name</label>\r\n                    <input type=\"text\" name=\"fullname\" id=\"fullname\" placeholder=\"Your Name\" value={fullname} onChange={(e) => setFullName(e.target.value)} required class=\"block w-full px-4 py-2 mt-2 text-gray-700 placeholder-gray-400 bg-white border border-gray-200 rounded-md dark:placeholder-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:border-gray-700 focus:border-blue-400 dark:focus:border-blue-400 focus:ring-blue-400 focus:outline-none focus:ring focus:ring-opacity-40\" />\r\n                  </div>\r\n\r\n                  <div class=\"mt-6\">\r\n                    <div class=\"flex justify-between mb-2\">\r\n                      <label for=\"password\" class=\"text-sm text-gray-600 dark:text-gray-200\">Mobile Number</label>\r\n                    </div>\r\n\r\n                    <input type=\"text\" value={mobilenumber} onChange={(e) => setMobileNumber(e.target.value)} required name=\"mobilenumber\" id=\"mobilnumber\" placeholder=\"Your Mobile Number\" class=\"block w-full px-4 py-2 mt-2 text-gray-700 placeholder-gray-400 bg-white border border-gray-200 rounded-md dark:placeholder-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:border-gray-700 focus:border-blue-400 dark:focus:border-blue-400 focus:ring-blue-400 focus:outline-none focus:ring focus:ring-opacity-40\" />\r\n                  </div>\r\n\r\n                  <div class=\"mt-6\">\r\n                    <label for=\"email\" class=\"block mb-2 text-sm text-gray-600 dark:text-gray-200\">Email Address</label>\r\n                    <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required name=\"email\" id=\"email\" placeholder=\"example@example.com\" class=\"block w-full px-4 py-2 mt-2 text-gray-700 placeholder-gray-400 bg-white border border-gray-200 rounded-md dark:placeholder-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:border-gray-700 focus:border-blue-400 dark:focus:border-blue-400 focus:ring-blue-400 focus:outline-none focus:ring focus:ring-opacity-40\" />\r\n                  </div>\r\n\r\n\r\n\r\n                  <div class=\"mt-6\">\r\n                    <div class=\"flex justify-between mb-2\">\r\n                      <label for=\"password\" class=\"text-sm text-gray-600 dark:text-gray-200\">Password</label>\r\n                    </div>\r\n\r\n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required name=\"password\" id=\"password\" placeholder=\"Your Password\" class=\"block w-full px-4 py-2 mt-2 text-gray-700 placeholder-gray-400 bg-white border border-gray-200 rounded-md dark:placeholder-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:border-gray-700 focus:border-blue-400 dark:focus:border-blue-400 focus:ring-blue-400 focus:outline-none focus:ring focus:ring-opacity-40\" />\r\n                  </div>\r\n\r\n\r\n                  <div class=\"mt-6\">\r\n                    <button type=\"submit\"\r\n                      class=\"w-full px-4 py-2 tracking-wide text-white transition-colors duration-200 transform bg-blue-500 rounded-md hover:bg-blue-400 focus:outline-none focus:bg-blue-400 focus:ring focus:ring-blue-300 focus:ring-opacity-50\">\r\n                      Sign up\r\n                    </button>\r\n                  </div>\r\n\r\n                </form>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\PlaceOrderScreen.js",[],[],"M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\Dashboard.js",[],[],"M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\OrderScreen.js",[],[],"M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\PaymentScreen.js",[],[],"M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\Search.js",["258","259","260"],[],"import axios from 'axios';\nimport React, { Fragment, useEffect, useState } from 'react'\nimport { Dialog, Disclosure, Transition } from '@headlessui/react'\nimport { XIcon } from '@heroicons/react/outline'\nimport { ChevronDownIcon, PlusSmIcon } from '@heroicons/react/solid'\nimport { useParams } from 'react-router-dom';\n\n\nconst breadcrumbs = [{ id: 1, name: 'Men', href: '#' }]\nconst filters = [\n    {\n        id: 'Filters',\n        name: 'Filters',\n        options: [\n            { value: 'Most Expensive', label: 'Most Expensive' },\n            { value: 'Most inexpensive', label: 'Most inexpensive' },\n            { value: 'Best Seller', label: 'Best Seller' },\n            { value: 'Daily Fresh', label: 'Daily Fresh' },\n            { value: 'Frozen', label: 'Frozen' },\n        ],\n    },\n\n]\n\n\nfunction classNames(...classes) {\n    return classes.filter(Boolean).join(' ')\n}\n\nconst Search = () => {\n    const [mobileFiltersOpen, setMobileFiltersOpen] = useState(false)\n    const token = JSON.parse(localStorage.getItem('token'));\n    const [search, setSearch] = useState([]);\n    const { id } = useParams();\n\n    useEffect(() => {\n        getSearch();\n    }, [])\n\n    const getSearch = async () => {\n        try {\n            let response = await axios.get(`https://server.seafreshing.com/api/product/search-product?q=${id}`);\n            setSearch(response.data)\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    console.log(search)\n\n    return (\n        <>\n            <div className=\"bg-white\">\n\n                <div>\n                    {/* Mobile filter dialog */}\n                    <Transition.Root show={mobileFiltersOpen} as={Fragment}>\n                        <Dialog as=\"div\" className=\"fixed inset-0 flex z-40 lg:hidden\" onClose={setMobileFiltersOpen}>\n                            <Transition.Child\n                                as={Fragment}\n                                enter=\"transition-opacity ease-linear duration-300\"\n                                enterFrom=\"opacity-0\"\n                                enterTo=\"opacity-100\"\n                                leave=\"transition-opacity ease-linear duration-300\"\n                                leaveFrom=\"opacity-100\"\n                                leaveTo=\"opacity-0\"\n                            >\n                                <Dialog.Overlay className=\"fixed inset-0 bg-black bg-opacity-25\" />\n                            </Transition.Child>\n\n                            <Transition.Child\n                                as={Fragment}\n                                enter=\"transition ease-in-out duration-300 transform\"\n                                enterFrom=\"translate-x-full\"\n                                enterTo=\"translate-x-0\"\n                                leave=\"transition ease-in-out duration-300 transform\"\n                                leaveFrom=\"translate-x-0\"\n                                leaveTo=\"translate-x-full\"\n                            >\n                                <div className=\"ml-auto relative max-w-xs w-full h-full bg-white shadow-xl py-4 pb-6 flex flex-col overflow-y-auto\">\n                                    <div className=\"px-4 flex items-center justify-between\">\n                                        <h2 className=\"text-lg font-medium text-gray-900\">Filters</h2>\n                                        <button\n                                            type=\"button\"\n                                            className=\"-mr-2 w-10 h-10 p-2 flex items-center justify-center text-gray-400 hover:text-gray-500\"\n                                            onClick={() => setMobileFiltersOpen(false)}\n                                        >\n                                            <span className=\"sr-only\">Close menu</span>\n                                            <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                                        </button>\n                                    </div>\n\n                                    {/* Filters */}\n                                    <form className=\"mt-4\">\n                                        {filters.map((section) => (\n                                            <Disclosure as=\"div\" key={section.name} className=\"border-t border-gray-200 pt-4 pb-4\">\n                                                {({ open }) => (\n                                                    <fieldset>\n                                                        <legend className=\"w-full px-2\">\n                                                            <Disclosure.Button className=\"w-full p-2 flex items-center justify-between text-gray-400 hover:text-gray-500\">\n                                                                <span className=\"text-sm font-medium text-gray-900\">{section.name}</span>\n                                                                <span className=\"ml-6 h-7 flex items-center\">\n                                                                    <ChevronDownIcon\n                                                                        className={classNames(open ? '-rotate-180' : 'rotate-0', 'h-5 w-5 transform')}\n                                                                        aria-hidden=\"true\"\n                                                                    />\n                                                                </span>\n                                                            </Disclosure.Button>\n                                                        </legend>\n                                                        <Disclosure.Panel className=\"pt-4 pb-2 px-4\">\n                                                            <div className=\"space-y-6\">\n                                                                {section.options.map((option, optionIdx) => (\n                                                                    <div key={option.value} className=\"flex items-center\">\n                                                                        <input\n                                                                            id={`${section.id}-${optionIdx}-mobile`}\n                                                                            name={`${section.id}[]`}\n                                                                            defaultValue={option.value}\n                                                                            type=\"checkbox\"\n                                                                            className=\"h-4 w-4 border-gray-300 rounded text-indigo-600 focus:ring-indigo-500\"\n                                                                        />\n                                                                        <label\n                                                                            htmlFor={`${section.id}-${optionIdx}-mobile`}\n                                                                            className=\"ml-3 text-sm text-gray-500\"\n                                                                        >\n                                                                            {option.label}\n                                                                        </label>\n                                                                    </div>\n                                                                ))}\n                                                            </div>\n                                                        </Disclosure.Panel>\n                                                    </fieldset>\n                                                )}\n                                            </Disclosure>\n                                        ))}\n                                    </form>\n                                </div>\n                            </Transition.Child>\n                        </Dialog>\n                    </Transition.Root>\n\n\n                    <main className=\"max-w-2xl mx-auto px-4 lg:max-w-7xl lg:px-8\">\n                        <div className=\"border-b border-gray-200 pt-24 pb-10\">\n                            <h1 className=\"text-4xl font-extrabold tracking-tight text-gray-900\">Search</h1>\n                        </div>\n\n                        <div className=\"pt-12 pb-24 lg:grid lg:grid-cols-3 lg:gap-x-8 xl:grid-cols-4\">\n                            <aside>\n                                <h2 className=\"sr-only\">Filters</h2>\n\n                                <button\n                                    type=\"button\"\n                                    className=\"inline-flex items-center lg:hidden\"\n                                    onClick={() => setMobileFiltersOpen(true)}\n                                >\n                                    <span className=\"text-sm font-medium text-gray-700\">Filters</span>\n                                    <PlusSmIcon className=\"flex-shrink-0 ml-1 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                                </button>\n\n                                <div className=\"hidden lg:block\">\n                                    <form className=\"divide-y divide-gray-200 space-y-10\">\n                                        {filters.map((section, sectionIdx) => (\n                                            <div key={section.name} className={sectionIdx === 0 ? null : 'pt-10'}>\n                                                <fieldset>\n                                                    <legend className=\"block text-sm font-medium text-gray-900\">{section.name}</legend>\n                                                    <div className=\"pt-6 space-y-3\">\n                                                        {section.options.map((option, optionIdx) => (\n                                                            <div key={option.value} className=\"flex items-center\">\n                                                                <input\n                                                                    id={`${section.id}-${optionIdx}`}\n                                                                    name={`${section.id}[]`}\n                                                                    defaultValue={option.value}\n                                                                    type=\"checkbox\"\n                                                                    className=\"h-4 w-4 border-gray-300 rounded text-indigo-600 focus:ring-indigo-500\"\n                                                                />\n                                                                <label htmlFor={`${section.id}-${optionIdx}`} className=\"ml-3 text-sm text-gray-600\">\n                                                                    {option.label}\n                                                                </label>\n                                                            </div>\n                                                        ))}\n                                                    </div>\n                                                </fieldset>\n                                            </div>\n                                        ))}\n                                    </form>\n                                </div>\n                            </aside>\n\n                            <section aria-labelledby=\"product-heading\" className=\"mt-6 lg:mt-0 lg:col-span-2 xl:col-span-3\">\n                                <h2 id=\"product-heading\" className=\"sr-only\">\n                                    Products\n                                </h2>\n\n                                <div className=\"grid grid-cols-1 gap-y-4 sm:grid-cols-2 sm:gap-x-6 sm:gap-y-10 lg:gap-x-8 xl:grid-cols-3\">\n                                    {\n                                        search.length === 0 ?\n                                            <span>Data not found</span>\n                                            :\n                                            search.map(product => (\n                                                <div\n                                                    key={product.id}\n                                                    className=\"group relative bg-white border border-gray-200 rounded-lg flex flex-col overflow-hidden\"\n                                                >\n                                                    <div className=\"aspect-w-3 aspect-h-4 bg-gray-200 group-hover:opacity-75 sm:aspect-none sm:h-96\">\n                                                        <img\n                                                            src={product.image[0].imgUrl}\n                                                            alt={product.productName}\n                                                            className=\"w-full h-full object-center object-cover sm:w-full sm:h-full\"\n                                                        />\n                                                    </div>\n                                                    <div className=\"flex-1 p-4 space-y-2 flex flex-col\">\n                                                        <h3 className=\"text-sm font-medium text-gray-900\">\n                                                            <a href={`/DetailProduct/${product.id}`}>\n                                                                <span aria-hidden=\"true\" className=\"absolute inset-0\" />\n                                                                {product.productName}\n                                                            </a>\n                                                        </h3>\n                                                        <p className=\"text-sm text-gray-500\">{product.productDescription}</p>\n                                                        <div className=\"flex-1 flex flex-col justify-end\">\n                                                            <p className=\"text-base font-medium text-gray-900\">{product.price.value}</p>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            ))\n                                    }\n                                </div>\n                            </section>\n                        </div>\n                    </main>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Search","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\NotFound.js",[],[],"M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\KioskScreen.js",["261","262","263","264","265","266","267","268","269","270"],[],"import React, { useState, useEffect, Fragment } from 'react'\r\nimport axios from 'axios';\r\nimport Notif from '../components/simple';\r\nimport { Dialog, Disclosure, Transition } from '@headlessui/react'\r\nimport { XIcon } from '@heroicons/react/outline'\r\nimport { ChevronDownIcon, PlusSmIcon } from '@heroicons/react/solid'\r\n\r\n\r\nconst breadcrumbs = [{ id: 1, name: 'Men', href: '#' }]\r\nconst filters = [\r\n  {\r\n    id: 'Filters',\r\n    name: 'Filters',\r\n    options: [\r\n      { value: 'Most Expensive', label: 'Most Expensive' },\r\n      { value: 'Most inexpensive', label: 'Most inexpensive' },\r\n      { value: 'Best Seller', label: 'Best Seller' },\r\n      { value: 'Daily Fresh', label: 'Daily Fresh' },\r\n      { value: 'Frozen', label: 'Frozen' },\r\n    ],\r\n  },\r\n\r\n]\r\nconst products = [\r\n  {\r\n    id: 1,\r\n    name: 'Ikan Tenggiri',\r\n    href: '#',\r\n    price: 'Rp.250.000',\r\n    description: 'Lorem ipsum dolor sit, amet consectetur adipisicing elit. In autem ipsa, nulla laboriosam dolores.',\r\n    options: '8 stocks',\r\n    imageSrc: 'https://dahliagroup.co.id/wp-content/uploads/2019/11/6.-Ikan-Tenggri-segar.jpg',\r\n    imageAlt: '',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Ikan Kakap',\r\n    href: '#',\r\n    price: 'Rp.320.000',\r\n    description: 'Lorem ipsum dolor sit, amet consectetur adipisicing elit. In autem ipsa, nulla laboriosam dolores.',\r\n    options: '10 stocks',\r\n    imageSrc: 'https://img.freepik.com/free-photo/top-view-raw-fish-tomatoes-lemon-slices-table-free-space_179666-46495.jpg?t=st=1651846661~exp=1651847261~hmac=6c361f06cae74352125f2a96f2cebea4baa82e76a858ececec52b9047c9a6fcd&w=1060',\r\n    imageAlt: '',\r\n  },\r\n  {\r\n    id: 1,\r\n    name: 'Gurita Segar',\r\n    href: '#',\r\n    price: 'Rp.250.000',\r\n    description: 'Lorem ipsum dolor sit, amet consectetur adipisicing elit. In autem ipsa, nulla laboriosam dolores.',\r\n    options: '8 stocks',\r\n    imageSrc: 'https://img.freepik.com/free-photo/octopus-tentacles-hang-from-tray_296586-5365.jpg?w=1060',\r\n    imageAlt: '',\r\n  },\r\n  {\r\n    id: 1,\r\n    name: 'Udang',\r\n    href: '#',\r\n    price: 'Rp.250.000',\r\n    description: 'Lorem ipsum dolor sit, amet consectetur adipisicing elit. In autem ipsa, nulla laboriosam dolores.',\r\n    options: '8 stocks',\r\n    imageSrc: 'https://img.freepik.com/free-photo/close-up-raw-shrimps-wooden-background_127675-2694.jpg?t=st=1651846934~exp=1651847534~hmac=fae2f4974af0245578daffd8c54da4941a31965b5be7db986b0599d3322f03e7&w=1060',\r\n    imageAlt: '',\r\n  },\r\n  // More products...\r\n]\r\n\r\n\r\nfunction classNames(...classes) {\r\n  return classes.filter(Boolean).join(' ')\r\n}\r\n\r\nconst KioskScreen = () => {\r\n  const [mobileFiltersOpen, setMobileFiltersOpen] = useState(false)\r\n\r\n  const userData = JSON.parse(localStorage.getItem('user-data'));\r\n  const [notif, setNotif] = useState({\r\n    error: '',\r\n    success: '',\r\n  });\r\n  const token = JSON.parse(localStorage.getItem('token'));\r\n  const [getKName, setKName] = useState([]);\r\n  const [getDName, setDName] = useState([]);\r\n  const [kioskName, setKioskName] = useState('');\r\n  const [kioskDomain, setKioskDomain] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [province, setProvince] = useState([]);\r\n  const [regencies, setRegencies] = useState([]);\r\n  const [district, setDistrict] = useState([]);\r\n  const [village, setVillage] = useState([]);\r\n  const [prov, setProv] = useState('');\r\n  const [reg, setReg] = useState('');\r\n  const [dist, setDist] = useState('');\r\n  const [vill, setVill] = useState('');\r\n  const [zipcode, setZipCode] = useState('');\r\n  const [mobilenumber, setMobileNumber] = useState('');\r\n  const [kioskId, setKioskId] = useState([]);\r\n  const [getKiosk, setKiosk] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getKioskName();\r\n  }, [kioskName])\r\n\r\n  const getKioskName = async () => {\r\n    try {\r\n      let response = await axios.get(`https://server.seafreshing.com/api/kiosk/check-name/${kioskName}`)\r\n      setKName(response.data);\r\n    } catch (e) {\r\n      if (e) {\r\n        console.log(e)\r\n      } else if (e.response.data) {\r\n        console.log(e.response.data)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDomainName();\r\n  }, [kioskDomain])\r\n\r\n  const getDomainName = async () => {\r\n    try {\r\n      let response = await axios.get(`https://server.seafreshing.com/api/kiosk/check-domain/${kioskDomain}`)\r\n      setDName(response.data);\r\n    } catch (e) {\r\n      if (e) {\r\n        console.log(e)\r\n      } else if (e.response.data) {\r\n        console.log(e.response.data)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getProvince();\r\n  }, [])\r\n\r\n  const getProvince = async () => {\r\n    try {\r\n      let response = await axios.get('https://server.seafreshing.com/api/list/province')\r\n      setProvince(response.data);\r\n    } catch (e) {\r\n      if (e) {\r\n        console.log(e)\r\n      } else if (e.response.data) {\r\n        console.log(e.response.data)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getRegencies();\r\n  }, [prov])\r\n\r\n  const getRegencies = async () => {\r\n    try {\r\n      let response = await axios.get(`https://server.seafreshing.com/api/list/regencies/${prov}`)\r\n      setRegencies(response.data);\r\n    } catch (e) {\r\n      if (e) {\r\n        console.log(e)\r\n      } else if (e.response.data) {\r\n        console.log(e.response.data)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDisctrict();\r\n  }, [reg])\r\n\r\n  const getDisctrict = async () => {\r\n    try {\r\n      let response = await axios.get(`https://server.seafreshing.com/api/list/districts/${reg}`)\r\n      setDistrict(response.data);\r\n    } catch (e) {\r\n      if (e) {\r\n        console.log(e)\r\n      } else if (e.response.data) {\r\n        console.log(e.response.data)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getVillages();\r\n  }, [dist])\r\n\r\n  const getVillages = async () => {\r\n    try {\r\n      let response = await axios.get(`https://server.seafreshing.com/api/list/villages/${dist}`)\r\n      setVillage(response.data);\r\n    } catch (e) {\r\n      if (e) {\r\n        console.log(e)\r\n      } else if (e.response.data) {\r\n        console.log(e.response.data)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleCreateKiosk = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let city = regencies.find(id => id.id === reg);\r\n    let dstrct = district.find(id => id.id === dist);\r\n    let vllgs = village.find(id => id.id === vill);\r\n    let prvnc = province.find(id => id.id === prov);\r\n    let today = new Date();\r\n    let date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n\r\n    let data = new FormData();\r\n    data.append('name', kioskName);\r\n    data.append('domain', kioskDomain);\r\n    data.append('search', kioskName);\r\n    data.append('fullAddress', address);\r\n    data.append('city', city.name);\r\n    data.append('zipcode', zipcode);\r\n    data.append('district', dstrct.name);\r\n    data.append('villages', vllgs.name);\r\n    data.append('province', prvnc.name);\r\n    data.append('mobilenumber', mobilenumber);\r\n    data.append('joinTime', date)\r\n\r\n    try {\r\n      let response = await axios.post('https://server.seafreshing.com/api/kiosk/open-kiosk', data, {\r\n        headers: {\r\n          'auth-token': token,\r\n        }\r\n      })\r\n      setKioskId(response.data.kiosk)\r\n      console.log(response.data)\r\n    } catch (e) {\r\n      if (e) {\r\n        console.log(e)\r\n        console.log(e.response.data)\r\n      } else if (e.response.data) {\r\n        console.log(e.response.data)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getKioskProduct();\r\n  }, [])\r\n\r\n  const getKioskProduct = async () => {\r\n    try {\r\n      let response = await axios.get(`https://server.seafreshing.com/api/kiosk/get-kiosk/${kioskId.id}`)\r\n      setKiosk(response.data.msg)\r\n    } catch (e) {\r\n      console.log(e)\r\n      console.log(e.response.data.msg)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\r\n        !kioskName ?\r\n          \"\"\r\n          :\r\n          getKName ?\r\n            getKName.code === 10 ?\r\n              <Notif title='Error' text={getKName.msg} />\r\n              :\r\n              <Notif title='Success' text={getKName.msg} />\r\n            : \"\"\r\n      }\r\n      {\r\n        !kioskDomain ?\r\n          \"\"\r\n          :\r\n          getDName ?\r\n            getDName.code === 10 ?\r\n              <Notif title='Error' text={getDName.msg} />\r\n              :\r\n              <Notif title='Success' text={getDName.msg} />\r\n            : \"\"\r\n      }\r\n      {\r\n        notif.success && (\r\n          <Notif title={notif.success} text=\"Data has been saved!\" />\r\n        )\r\n      }\r\n      {\r\n        notif.error && (\r\n          <Notif title='Error' text={notif.error} />\r\n        )\r\n      }\r\n      {\r\n        getKiosk.length === 0 ?\r\n          <>\r\n            <div className=\"mt-10 sm:mt-0 container px-6 py-3 mx-auto\">\r\n              <div className=\"md:grid md:grid-cols-3 md:gap-6\">\r\n                <div className=\"md:col-span-1\">\r\n                  <div className=\"px-4 sm:px-0\">\r\n                    <h3 className=\"text-lg font-medium leading-6 text-gray-900\">Personal Information</h3>\r\n                    <p className=\"mt-1 text-sm text-gray-600\">Use a permanent address where you can receive mail.</p>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"mt-5 md:mt-0 md:col-span-2\">\r\n                  <form onSubmit={handleCreateKiosk}>\r\n                    <div className=\"shadow overflow-hidden sm:rounded-md\">\r\n                      <div className=\"px-4 py-5 bg-white sm:p-6\">\r\n                        <div className=\"grid grid-cols-6 gap-6\">\r\n\r\n                          <div className=\"col-span-6 sm:col-span-3\">\r\n                            <label htmlFor=\"first-name\" className=\"block text-sm font-medium text-gray-700\">\r\n                              Kiosk Name\r\n                            </label>\r\n                            <input\r\n                              value={kioskName} onChange={(e) => setKioskName(e.target.value)}\r\n                              type=\"text\"\r\n                              required\r\n                              autoComplete=\"given-name\"\r\n                              className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                            />\r\n                          </div>\r\n\r\n                          <div className=\"col-span-6 sm:col-span-4\">\r\n                            <label htmlFor=\"email-address\" className=\"block text-sm font-medium text-gray-700\">\r\n                              Kiosk Domain\r\n                            </label>\r\n                            <input\r\n                              value={kioskDomain} onChange={(e) => setKioskDomain(e.target.value)}\r\n                              type=\"text\"\r\n                              autoComplete=\"email\"\r\n                              className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                            />\r\n                          </div>\r\n                          {\r\n                            getKName && getDName ?\r\n                              getKName.code === 200 && getDName.code === 200 ?\r\n                                <>\r\n                                  <div className=\"col-span-6 sm:col-span-4\">\r\n                                    <label htmlFor=\"email-address\" className=\"block text-sm font-medium text-gray-700\">\r\n                                      Full Address\r\n                                    </label>\r\n                                    <input\r\n                                      value={address} onChange={(e) => setAddress(e.target.value)}\r\n                                      type=\"text\"\r\n                                      autoComplete=\"email\"\r\n                                      className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                                    />\r\n                                  </div>\r\n                                  <div className=\"col-span-6 sm:col-span-4\">\r\n                                    <label htmlFor=\"email-address\" className=\"block text-sm font-medium text-gray-700\">\r\n                                      Provinsi\r\n                                    </label>\r\n                                    {\r\n                                      province.length === 0 ?\r\n                                        <label>No data</label>\r\n                                        :\r\n                                        <select value={prov} onChange={(e) => setProv(e.target.value)} required>\r\n                                          <option selected>Open this select menu</option>\r\n                                          {\r\n                                            province.map(province => (\r\n                                              <option key={province.id} value={province.id}>{province.name}</option>\r\n                                            ))\r\n                                          }\r\n                                        </select>\r\n                                    }\r\n                                  </div>\r\n                                  {\r\n                                    prov && (\r\n                                      <div className=\"col-span-6 sm:col-span-4\">\r\n                                        <label htmlFor=\"email-address\" className=\"block text-sm font-medium text-gray-700\">\r\n                                          Kota\r\n                                        </label>\r\n                                        {\r\n                                          regencies.length === 0 ?\r\n                                            <label>No data</label>\r\n                                            :\r\n                                            <select value={reg} onChange={(e) => setReg(e.target.value)} required>\r\n                                              <option selected>Open this select menu</option>\r\n                                              {\r\n                                                regencies.map(regencies => (\r\n                                                  <option key={regencies.id} value={regencies.id}>{regencies.name}</option>\r\n                                                ))\r\n                                              }\r\n                                            </select>\r\n                                        }\r\n                                      </div>\r\n                                    )\r\n                                  }\r\n                                  {\r\n                                    reg && (\r\n                                      <div className=\"col-span-6 sm:col-span-4\">\r\n                                        <label htmlFor=\"email-address\" className=\"block text-sm font-medium text-gray-700\">\r\n                                          Kecamatan\r\n                                        </label>\r\n                                        {\r\n                                          district.length === 0 ?\r\n                                            <label>No data</label>\r\n                                            :\r\n                                            <select value={dist} onChange={(e) => setDist(e.target.value)} required>\r\n                                              <option selected>Open this select menu</option>\r\n                                              {\r\n                                                district.map(district => (\r\n                                                  <option key={district.id} value={district.id}>{district.name}</option>\r\n                                                ))\r\n                                              }\r\n                                            </select>\r\n                                        }\r\n                                      </div>\r\n                                    )\r\n                                  }\r\n                                  {\r\n                                    dist && (\r\n                                      <div className=\"col-span-6 sm:col-span-4\">\r\n                                        <label htmlFor=\"email-address\" className=\"block text-sm font-medium text-gray-700\">\r\n                                          Kelurahan\r\n                                        </label>\r\n                                        {\r\n                                          village.length === 0 ?\r\n                                            <label>No data</label>\r\n                                            :\r\n                                            <select value={vill} onChange={(e) => setVill(e.target.value)} required>\r\n                                              <option selected>Open this select menu</option>\r\n                                              {\r\n                                                village.map(village => (\r\n                                                  <option key={village.id} value={village.id}>{village.name}</option>\r\n                                                ))\r\n                                              }\r\n                                            </select>\r\n                                        }\r\n                                      </div>\r\n                                    )\r\n                                  }\r\n                                  <div className=\"col-span-6 sm:col-span-3\">\r\n                                    <label htmlFor=\"first-name\" className=\"block text-sm font-medium text-gray-700\">\r\n                                      Zip Code\r\n                                    </label>\r\n                                    <input\r\n                                      value={zipcode} onChange={(e) => setZipCode(e.target.value)}\r\n                                      type=\"text\"\r\n                                      required\r\n                                      autoComplete=\"given-name\"\r\n                                      className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                                    />\r\n                                  </div>\r\n                                  <div className=\"col-span-6 sm:col-span-3\">\r\n                                    <label htmlFor=\"first-name\" className=\"block text-sm font-medium text-gray-700\">\r\n                                      Mobile Number\r\n                                    </label>\r\n                                    <input\r\n                                      value={mobilenumber} onChange={(e) => setMobileNumber(e.target.value)}\r\n                                      type=\"text\"\r\n                                      required\r\n                                      autoComplete=\"given-name\"\r\n                                      className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                                    />\r\n                                  </div>\r\n                                  <button type='submit'>Create Kiosk</button>\r\n                                </>\r\n                                :\r\n                                \"\"\r\n                              :\r\n                              \"\"\r\n                          }\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\r\n                        <button\r\n                          type=\"submit\"\r\n                          className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                        >\r\n                          Save\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"hidden sm:block\" aria-hidden=\"true\">\r\n              <div className=\"py-5\">\r\n                <div className=\"border-t border-gray-200\" />\r\n              </div>\r\n            </div>\r\n          </>\r\n          :\r\n          <>\r\n            <div className=\"bg-white\">\r\n\r\n              <div>\r\n                {/* Mobile filter dialog */}\r\n\r\n                <Transition.Root show={mobileFiltersOpen} as={Fragment}>\r\n                  <Dialog as=\"div\" className=\"fixed inset-0 flex z-40 lg:hidden\" onClose={setMobileFiltersOpen}>\r\n                    <Transition.Child\r\n                      as={Fragment}\r\n                      enter=\"transition-opacity ease-linear duration-300\"\r\n                      enterFrom=\"opacity-0\"\r\n                      enterTo=\"opacity-100\"\r\n                      leave=\"transition-opacity ease-linear duration-300\"\r\n                      leaveFrom=\"opacity-100\"\r\n                      leaveTo=\"opacity-0\"\r\n                    >\r\n                      <Dialog.Overlay className=\"fixed inset-0 bg-black bg-opacity-25\" />\r\n                    </Transition.Child>\r\n\r\n                    <Transition.Child\r\n                      as={Fragment}\r\n                      enter=\"transition ease-in-out duration-300 transform\"\r\n                      enterFrom=\"translate-x-full\"\r\n                      enterTo=\"translate-x-0\"\r\n                      leave=\"transition ease-in-out duration-300 transform\"\r\n                      leaveFrom=\"translate-x-0\"\r\n                      leaveTo=\"translate-x-full\"\r\n                    >\r\n\r\n                      <div className=\"ml-auto relative max-w-xs w-full h-full bg-white shadow-xl py-4 pb-6 flex flex-col overflow-y-auto\">\r\n                        <div className=\"px-4 flex items-center justify-between\">\r\n                          <h2 className=\"text-lg font-medium text-gray-900\">Filters</h2>\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"-mr-2 w-10 h-10 p-2 flex items-center justify-center text-gray-400 hover:text-gray-500\"\r\n                            onClick={() => setMobileFiltersOpen(false)}\r\n                          >\r\n                            <span className=\"sr-only\">Close menu</span>\r\n                            <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n                          </button>\r\n                        </div>\r\n\r\n                        {/* Filters */}\r\n                        <form className=\"mt-4\">\r\n                          {filters.map((section) => (\r\n                            <Disclosure as=\"div\" key={section.name} className=\"border-t border-gray-200 pt-4 pb-4\">\r\n                              {({ open }) => (\r\n                                <fieldset>\r\n                                  <legend className=\"w-full px-2\">\r\n                                    <Disclosure.Button className=\"w-full p-2 flex items-center justify-between text-gray-400 hover:text-gray-500\">\r\n                                      <span className=\"text-sm font-medium text-gray-900\">{section.name}</span>\r\n                                      <span className=\"ml-6 h-7 flex items-center\">\r\n                                        <ChevronDownIcon\r\n                                          className={classNames(open ? '-rotate-180' : 'rotate-0', 'h-5 w-5 transform')}\r\n                                          aria-hidden=\"true\"\r\n                                        />\r\n                                      </span>\r\n                                    </Disclosure.Button>\r\n                                  </legend>\r\n                                  <Disclosure.Panel className=\"pt-4 pb-2 px-4\">\r\n                                    <div className=\"space-y-6\">\r\n                                      {section.options.map((option, optionIdx) => (\r\n                                        <div key={option.value} className=\"flex items-center\">\r\n                                          <input\r\n                                            id={`${section.id}-${optionIdx}-mobile`}\r\n                                            name={`${section.id}[]`}\r\n                                            defaultValue={option.value}\r\n                                            type=\"checkbox\"\r\n                                            className=\"h-4 w-4 border-gray-300 rounded text-indigo-600 focus:ring-indigo-500\"\r\n                                          />\r\n                                          <label\r\n                                            htmlFor={`${section.id}-${optionIdx}-mobile`}\r\n                                            className=\"ml-3 text-sm text-gray-500\"\r\n                                          >\r\n                                            {option.label}\r\n                                          </label>\r\n                                        </div>\r\n                                      ))}\r\n                                    </div>\r\n                                  </Disclosure.Panel>\r\n                                </fieldset>\r\n                              )}\r\n                            </Disclosure>\r\n                          ))}\r\n                        </form>\r\n                      </div>\r\n                    </Transition.Child>\r\n                  </Dialog>\r\n                </Transition.Root>\r\n\r\n\r\n                <main className=\"max-w-2xl mx-auto px-4 lg:max-w-7xl lg:px-8\">\r\n                  <div className=\"border-b border-gray-200 pt-24 pb-10\">\r\n                    <h1 className=\"text-4xl font-extrabold tracking-tight text-gray-900\">Kiosk Product</h1>\r\n                    <p className=\"mt-4 text-base text-gray-500\">\r\n                      Immediately freeze the fresh seafoods you have!\r\n                    </p>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"mt-7 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-sky-400 hover:bg-sky-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sky-500\"\r\n                    >\r\n                      Add Product\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div className=\"pt-12 pb-24 lg:grid lg:grid-cols-3 lg:gap-x-8 xl:grid-cols-4\">\r\n                    <aside>\r\n                      <h2 className=\"sr-only\">Filters</h2>\r\n\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"inline-flex items-center lg:hidden\"\r\n                        onClick={() => setMobileFiltersOpen(true)}\r\n                      >\r\n                        <span className=\"text-sm font-medium text-gray-700\">Filters</span>\r\n                        <PlusSmIcon className=\"flex-shrink-0 ml-1 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\r\n                      </button>\r\n\r\n                      <div className=\"hidden lg:block\">\r\n                        <form className=\"divide-y divide-gray-200 space-y-10\">\r\n                          {filters.map((section, sectionIdx) => (\r\n                            <div key={section.name} className={sectionIdx === 0 ? null : 'pt-10'}>\r\n                              <fieldset>\r\n                                <legend className=\"block text-sm font-medium text-gray-900\">{section.name}</legend>\r\n                                <div className=\"pt-6 space-y-3\">\r\n                                  {section.options.map((option, optionIdx) => (\r\n                                    <div key={option.value} className=\"flex items-center\">\r\n                                      <input\r\n                                        id={`${section.id}-${optionIdx}`}\r\n                                        name={`${section.id}[]`}\r\n                                        defaultValue={option.value}\r\n                                        type=\"checkbox\"\r\n                                        className=\"h-4 w-4 border-gray-300 rounded text-indigo-600 focus:ring-indigo-500\"\r\n                                      />\r\n                                      <label htmlFor={`${section.id}-${optionIdx}`} className=\"ml-3 text-sm text-gray-600\">\r\n                                        {option.label}\r\n                                      </label>\r\n                                    </div>\r\n                                  ))}\r\n                                </div>\r\n                              </fieldset>\r\n                            </div>\r\n                          ))}\r\n                        </form>\r\n                      </div>\r\n                    </aside>\r\n\r\n                    <section aria-labelledby=\"product-heading\" className=\"mt-6 lg:mt-0 lg:col-span-2 xl:col-span-3\">\r\n                      <h2 id=\"product-heading\" className=\"sr-only\">\r\n                        Products\r\n                      </h2>\r\n\r\n                      <div className=\"grid grid-cols-1 gap-y-4 sm:grid-cols-2 sm:gap-x-6 sm:gap-y-10 lg:gap-x-8 xl:grid-cols-3\">\r\n                        {\r\n                          getKiosk.length === 0 ?\r\n                            <span>Data not found</span>\r\n                            :\r\n                            getKiosk.map(product => (\r\n                              <div\r\n                                key={product.id}\r\n                                className=\"group relative bg-white border border-gray-200 rounded-lg flex flex-col overflow-hidden\"\r\n                              >\r\n                                <div className=\"aspect-w-3 aspect-h-4 bg-gray-200 group-hover:opacity-75 sm:aspect-none sm:h-96\">\r\n                                  <img\r\n                                    src={product.image[0].imgUrl}\r\n                                    alt={product.productName}\r\n                                    className=\"w-full h-full object-center object-cover sm:w-full sm:h-full\"\r\n                                  />\r\n                                </div>\r\n                                <div className=\"flex-1 p-4 space-y-2 flex flex-col\">\r\n                                  <h3 className=\"text-sm font-medium text-gray-900\">\r\n                                    <a href={`/DetailProduct/${product.id}`}>\r\n                                      <span aria-hidden=\"true\" className=\"absolute inset-0\" />\r\n                                      {product.productName}\r\n                                    </a>\r\n                                  </h3>\r\n                                  <p className=\"text-sm text-gray-500\">{product.productDescription}</p>\r\n                                  <div className=\"flex-1 flex flex-col justify-end\">\r\n                                    <p className=\"text-sm italic text-gray-500\">{product.options}</p>\r\n                                    <p className=\"text-base font-medium text-gray-900\">{product.price.value}</p>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            ))\r\n                        }\r\n                      </div>\r\n                    </section>\r\n                  </div>\r\n                </main>\r\n              </div>\r\n            </div>\r\n          </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default KioskScreen","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\Profile.js",["271","272"],[],"import axios from \"axios\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport Notif from '../components/simple';\r\n\r\nexport default function Profile() {\r\n    const [user, setUser] = useState([]);\r\n    const [img, setImg] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPass, setConfirmPass] = useState('');\r\n    const [notif, setNotif] = useState({\r\n        error: '',\r\n        success: '',\r\n    });\r\n    const userData = JSON.parse(localStorage.getItem('user-data'));\r\n    const imgFile = useRef('');\r\n    const qs = require('qs');\r\n\r\n    useEffect(() => {\r\n        getUser();\r\n    }, [])\r\n\r\n    const getUser = async () => {\r\n        try {\r\n            const response = await axios.get(`https://server.seafreshing.com/api/user/get-user/${userData.accounttype}/${userData.id}`, {\r\n                headers: {\r\n                    'auth-token': JSON.parse(localStorage.getItem('token')),\r\n                }\r\n            })\r\n            setUser(response.data.user)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const getImg = () => {\r\n        imgFile.current.click();\r\n    }\r\n\r\n    const handleUpload = async () => {\r\n        if (img) {\r\n            let data = new FormData();\r\n            data.append('file', img);\r\n\r\n            try {\r\n                let response = await axios.post('https://server.seafreshing.com/api/file-uploader/upload-profile-picture', data, {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data',\r\n                        'auth-token': JSON.parse(localStorage.getItem('token')),\r\n                    }\r\n                })\r\n                if (response.data) {\r\n                    try {\r\n                        let res = await axios.patch('https://server.seafreshing.com/api/user/set-profile-picture', {\r\n                            'id': userData.id,\r\n                            'url': response.data.filePath,\r\n                        }, {\r\n                            headers: {\r\n                                'Content-Type': 'application/json',\r\n                                'auth-token': JSON.parse(localStorage.getItem('token')),\r\n                            }\r\n                        })\r\n                        if (res.data) {\r\n                            setNotif({\r\n                                'error': '',\r\n                                'Success': 'Profile picture has been changed'\r\n                            })\r\n                        }\r\n                    } catch (e) {\r\n                        console.log(e.res.data)\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                setNotif({\r\n                    'error': 'File is too large',\r\n                    'Success': ''\r\n                })\r\n                console.log(e)\r\n                console.log(e.response)\r\n                console.log(e.response.data)\r\n            }\r\n        } else {\r\n            setNotif({\r\n                'error': \"Photo is not found\",\r\n                'success': ''\r\n            })\r\n        }\r\n    }\r\n\r\n    const validatePassword = (oldPass, newPass) => {\r\n        if (oldPass !== newPass) {\r\n            setNotif({\r\n                error: 'Password doesnt match',\r\n                success: '',\r\n            })\r\n        }\r\n    }\r\n\r\n    console.log(img)\r\n\r\n    const updateUser = async (e) => {\r\n        e.preventDefault();\r\n        if (!validatePassword(password, confirmPass)) {\r\n            try {\r\n                let response = await axios.patch(`https://server.seafreshing.com/api/user/set-fullname`, qs.stringify({\r\n                    'id': userData.id,\r\n                    'fullname': username,\r\n                }), {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'auth-token': JSON.parse(localStorage.getItem('token')),\r\n                    }\r\n                })\r\n                if (response.data) {\r\n                    try {\r\n                        let response = await axios.patch(`https://server.seafreshing.com/api/user/update-password-user`, qs.stringify({\r\n                            'id': userData.id,\r\n                            'fullname': password,\r\n                        }), {\r\n                            headers: {\r\n                                'Content-Type': 'application/json',\r\n                                'auth-token': JSON.parse(localStorage.getItem('token')),\r\n                            }\r\n                        })\r\n                        console.log(response.data)\r\n                    } catch (e) {\r\n                        console.log(e.response.data)\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                if (e.response.data) setNotif({\r\n                    error: 'e.response.data.msg',\r\n                    success: '',\r\n                })\r\n            }\r\n            setNotif({\r\n                error: '',\r\n                success: 'Success',\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                notif.success && (\r\n                    <Notif title={notif.success} text=\"Data has been saved!\" />\r\n                )\r\n            }\r\n            {\r\n                notif.error && (\r\n                    <Notif title='Error' text={notif.error} />\r\n                )\r\n            }\r\n            <div className=\"mt-10 sm:mt-0 container px-6 py-3 mx-auto\">\r\n                <div className=\"md:grid md:grid-cols-3 md:gap-6\">\r\n                    <div className=\"md:col-span-1\">\r\n                        <div className=\"px-4 sm:px-0\">\r\n                            <h3 className=\"text-lg font-medium leading-6 text-gray-900\">Personal Information</h3>\r\n                            <p className=\"mt-1 text-sm text-gray-600\">Use a permanent address where you can receive mail.</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"mt-5 md:mt-0 md:col-span-2\">\r\n                        <div>\r\n                            <label className=\"block text-sm font-medium text-gray-700\">Photo</label>\r\n                            <div className=\"mt-1 flex items-center\">\r\n                                {\r\n                                    user.profile ?\r\n                                        <img onClick={getImg} className=\"inline-block h-12 w-12 rounded-full overflow-hidden bg-gray-100\" src={user.profile} />\r\n                                        :\r\n                                        <span onClick={getImg} className=\"inline-block h-12 w-12 rounded-full overflow-hidden bg-gray-100\">\r\n                                            <svg className=\"h-full w-full text-gray-300\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                                <path d=\"M24 20.993V24H0v-2.996A14.977 14.977 0 0112.004 15c4.904 0 9.26 2.354 11.996 5.993zM16.002 8.999a4 4 0 11-8 0 4 4 0 018 0z\" />\r\n                                            </svg>\r\n                                        </span>\r\n                                }\r\n                                <input\r\n                                    type=\"file\"\r\n                                    className='hidden'\r\n                                    ref={imgFile}\r\n                                    onChange={(e) => setImg(e.target.files[0])}\r\n                                />\r\n                                <button\r\n                                    onClick={handleUpload}\r\n                                    className=\"ml-5 bg-white py-2 px-3 border border-gray-300 rounded-md shadow-sm text-sm leading-4 font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                                >\r\n                                    Change\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <form onSubmit={updateUser}>\r\n                            <div className=\"shadow overflow-hidden sm:rounded-md\">\r\n                                <div className=\"px-4 py-5 bg-white sm:p-6\">\r\n                                    <div className=\"grid grid-cols-6 gap-6\">\r\n\r\n                                        <div className=\"col-span-6 sm:col-span-3\">\r\n                                            <label htmlFor=\"first-name\" className=\"block text-sm font-medium text-gray-700\">\r\n                                                Username\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                placeholder={userData.fullname}\r\n                                                value={username}\r\n                                                onChange={(e) => setUsername(e.target.value)}\r\n                                                required\r\n                                                autoComplete=\"given-name\"\r\n                                                className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className=\"col-span-6 sm:col-span-4\">\r\n                                            <label htmlFor=\"email-address\" className=\"block text-sm font-medium text-gray-700\">\r\n                                                Email address\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"email\" placeholder={userData.email} value={email} onChange={(e) => setEmail(e.target.value)}\r\n                                                autoComplete=\"email\"\r\n                                                className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-span-6 sm:col-span-3\">\r\n                                            <label htmlFor=\"first-name\" className=\"block text-sm font-medium text-gray-700\">\r\n                                                New Password\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)}\r\n                                                autoComplete=\"given-name\"\r\n                                                className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className=\"col-span-6 sm:col-span-3\">\r\n                                            <label htmlFor=\"last-name\" className=\"block text-sm font-medium text-gray-700\">\r\n                                                Confirm Password\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"password\" value={confirmPass} onChange={(e) => setConfirmPass(e.target.value)}\r\n                                                autoComplete=\"family-name\"\r\n                                                className=\"mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md\"\r\n                                            />\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                                    >\r\n                                        Save\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"hidden sm:block\" aria-hidden=\"true\">\r\n                <div className=\"py-5\">\r\n                    <div className=\"border-t border-gray-200\" />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\Freezer.js",["273","274","275"],[],"M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\DetailProduct.js",["276","277","278","279","280","281","282","283","284"],[],"M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\ProductList.js",[],[],"M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\Wishlist.js",["285"],[],"M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\Chat.js",["286","287","288","289","290","291","292","293","294","295"],[],"M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\HeaderHS.js",["296","297","298","299","300","301","302","303","304","305","306","307"],[],"M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\Footers.js",["308","309","310","311","312","313","314","315","316","317","318","319","320"],[],"const Footer = () => {\r\n  return (\r\n\r\n    <footer class=\"mt-5 bg-white dark:bg-gray-800\">\r\n      <div class=\"container px-6 py-4 mx-auto\">\r\n        <div class=\"lg:flex\">\r\n          <div class=\"w-full -mx-6 lg:w-2/5\">\r\n            <div class=\"px-6\">\r\n              <div>\r\n                <a href=\"#\" class=\"text-xl font-bold text-sky-400 dark:text-white hover:text-sky-600 dark:hover:text-sky-300\">SeaFreshing</a>\r\n              </div>\r\n\r\n              <p class=\"max-w-md mt-2 text-gray-500 dark:text-gray-400\">We work with the best call storage in Muara Angke and Muara Baru to find your new seafood.</p>\r\n\r\n              <div class=\"flex mt-4 -mx-2\">\r\n                <a href=\"#\" class=\"mx-2 text-gray-700 dark:text-gray-200 hover:text-gray-600 dark:hover:text-gray-400\" aria-label=\"Linkden\">\r\n                  <svg class=\"w-4 h-4 fill-current\" viewBox=\"0 0 512 512\">\r\n                    <path d=\"M444.17,32H70.28C49.85,32,32,46.7,32,66.89V441.61C32,461.91,49.85,480,70.28,480H444.06C464.6,480,480,461.79,480,441.61V66.89C480.12,46.7,464.6,32,444.17,32ZM170.87,405.43H106.69V205.88h64.18ZM141,175.54h-.46c-20.54,0-33.84-15.29-33.84-34.43,0-19.49,13.65-34.42,34.65-34.42s33.85,14.82,34.31,34.42C175.65,160.25,162.35,175.54,141,175.54ZM405.43,405.43H341.25V296.32c0-26.14-9.34-44-32.56-44-17.74,0-28.24,12-32.91,23.69-1.75,4.2-2.22,9.92-2.22,15.76V405.43H209.38V205.88h64.18v27.77c9.34-13.3,23.93-32.44,57.88-32.44,42.13,0,74,27.77,74,87.64Z\" />\r\n                  </svg>\r\n                </a>\r\n\r\n                <a href=\"#\" class=\"mx-2 text-gray-700 dark:text-gray-200 hover:text-gray-600 dark:hover:text-gray-400\" aria-label=\"Facebook\">\r\n                  <svg class=\"w-4 h-4 fill-current\" viewBox=\"0 0 512 512\">\r\n                    <path d=\"M455.27,32H56.73A24.74,24.74,0,0,0,32,56.73V455.27A24.74,24.74,0,0,0,56.73,480H256V304H202.45V240H256V189c0-57.86,40.13-89.36,91.82-89.36,24.73,0,51.33,1.86,57.51,2.68v60.43H364.15c-28.12,0-33.48,13.3-33.48,32.9V240h67l-8.75,64H330.67V480h124.6A24.74,24.74,0,0,0,480,455.27V56.73A24.74,24.74,0,0,0,455.27,32Z\" />\r\n                  </svg>\r\n                </a>\r\n\r\n                <a href=\"#\" class=\"mx-2 text-gray-700 dark:text-gray-200 hover:text-gray-600 dark:hover:text-gray-400\" aria-label=\"Twitter\">\r\n                  <svg class=\"w-4 h-4 fill-current\" viewBox=\"0 0 512 512\">\r\n                    <path d=\"M496,109.5a201.8,201.8,0,0,1-56.55,15.3,97.51,97.51,0,0,0,43.33-53.6,197.74,197.74,0,0,1-62.56,23.5A99.14,99.14,0,0,0,348.31,64c-54.42,0-98.46,43.4-98.46,96.9a93.21,93.21,0,0,0,2.54,22.1,280.7,280.7,0,0,1-203-101.3A95.69,95.69,0,0,0,36,130.4C36,164,53.53,193.7,80,211.1A97.5,97.5,0,0,1,35.22,199v1.2c0,47,34,86.1,79,95a100.76,100.76,0,0,1-25.94,3.4,94.38,94.38,0,0,1-18.51-1.8c12.51,38.5,48.92,66.5,92.05,67.3A199.59,199.59,0,0,1,39.5,405.6,203,203,0,0,1,16,404.2,278.68,278.68,0,0,0,166.74,448c181.36,0,280.44-147.7,280.44-275.8,0-4.2-.11-8.4-.31-12.5A198.48,198.48,0,0,0,496,109.5Z\" />\r\n                  </svg>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"mt-6 lg:mt-0 lg:flex-1\">\r\n            <div class=\"grid grid-cols-2 gap-6 sm:grid-cols-3 md:grid-cols-4\">\r\n              <div>\r\n                <h3 class=\"text-gray-700 uppercase dark:text-white\">About</h3>\r\n                <a href=\"#\" class=\"block mt-2 text-sm text-gray-600 dark:text-gray-400 hover:underline\">Company</a>\r\n                <a href=\"#\" class=\"block mt-2 text-sm text-gray-600 dark:text-gray-400 hover:underline\">community</a>\r\n                <a href=\"#\" class=\"block mt-2 text-sm text-gray-600 dark:text-gray-400 hover:underline\">Careers</a>\r\n              </div>\r\n\r\n              <div>\r\n                <h3 class=\"text-gray-700 uppercase dark:text-white\">Blog</h3>\r\n                <a href=\"#\" class=\"block mt-2 text-sm text-gray-600 dark:text-gray-400 hover:underline\">Tec</a>\r\n                <a href=\"#\" class=\"block mt-2 text-sm text-gray-600 dark:text-gray-400 hover:underline\">Music</a>\r\n                <a href=\"#\" class=\"block mt-2 text-sm text-gray-600 dark:text-gray-400 hover:underline\">Videos</a>\r\n              </div>\r\n\r\n              <div>\r\n                <h3 class=\"text-gray-700 uppercase dark:text-white\">Products</h3>\r\n                <a href=\"#\" class=\"block mt-2 text-sm text-gray-600 dark:text-gray-400 hover:underline\">Fish</a>\r\n                <a href=\"#\" class=\"block mt-2 text-sm text-gray-600 dark:text-gray-400 hover:underline\">Mussels</a>\r\n                <a href=\"#\" class=\"block mt-2 text-sm text-gray-600 dark:text-gray-400 hover:underline\">Shrimp</a>\r\n              </div>\r\n\r\n              <div>\r\n                <h3 class=\"text-gray-700 uppercase dark:text-white\">Contact</h3>\r\n                <span class=\"block mt-2 text-sm text-gray-600 dark:text-gray-400 hover:underline\">+1 526 654 8965</span>\r\n                <span class=\"block mt-2 text-sm text-gray-600 dark:text-gray-400 hover:underline\">example@email.com</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <hr class=\"h-px my-6 bg-gray-300 border-none dark:bg-gray-700\" />\r\n\r\n        <div>\r\n          <p class=\"text-center text-gray-800 dark:text-white\">© SeaFreshing 2022 - All rights reserved</p>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\TrendingProduct\\TrendingProduct.js",["321","322","323","324"],[],"\r\n\r\nconst TrendingProduct = () => {\r\n    return (\r\n        <div class=\"bg-white\">\r\n            <div class=\"max-w-2xl mx-auto py-16 px-4 sm:py-24 sm:px-6 lg:max-w-7xl lg:px-8\">\r\n                <h2 class=\"text-2xl font-extrabold tracking-tight text-gray-900\">Trending products</h2>\r\n\r\n                <div class=\"mt-6 grid grid-cols-1 gap-y-10 sm:grid-cols-2 gap-x-6 lg:grid-cols-3 xl:grid-cols-4 xl:gap-x-8\">\r\n                    <a href=\"#\" class=\"group\">\r\n                        <div class=\"w-full aspect-w-1 aspect-h-1 bg-gray-200 rounded-lg overflow-hidden xl:aspect-w-7 xl:aspect-h-8\">\r\n                            <img src=\"https://dahliagroup.co.id/wp-content/uploads/2019/11/6.-Ikan-Tenggri-segar.jpg\" alt=\"Tall slender porcelain bottle with natural clay textured body and cork stopper.\" class=\"w-full h-full object-center object-cover group-hover:opacity-75\" />\r\n                        </div>\r\n                        <h3 class=\"mt-4 text-sm text-gray-700\">Ikan Tenggiri</h3>\r\n                        <p class=\"mt-1 text-lg font-medium text-gray-900\">Rp.170.000</p>\r\n                    </a>\r\n\r\n                    <a href=\"#\" class=\"group\">\r\n                        <div class=\"w-full h-56 bg-gray-200 rounded-md overflow-hidden group-hover:opacity-75 lg:h-72 xl:h-80\">\r\n                            <img src=\"https://dahliagroup.co.id/wp-content/uploads/2019/11/10.-Ikan-Layur-Segar.jpg\" alt=\"Olive drab green insulated bottle with flared screw lid and flat top.\" class=\"w-full h-full object-center object-cover group-hover:opacity-75\" />\r\n                        </div>\r\n                        <h3 class=\"mt-4 text-sm text-gray-700\">Ikan Layur</h3>\r\n                        <p class=\"mt-1 text-lg font-medium text-gray-900\">Rp.150.000</p>\r\n                    </a>\r\n\r\n                    <a href=\"#\" class=\"group\">\r\n                        <div class=\"w-full h-56 bg-gray-200 rounded-md overflow-hidden group-hover:opacity-75 lg:h-72 xl:h-80\">\r\n                            <img src=\"https://doktersehat.com/wp-content/uploads/2020/03/manfaat-ikan-kakap-doktersehat.jpg\" alt=\"Person using a pen to cross a task off a productivity paper card.\" class=\"w-full h-full object-center object-cover group-hover:opacity-75\" />\r\n                        </div>\r\n                        <h3 class=\"mt-4 text-sm text-gray-700\">Ikan Kakap</h3>\r\n                        <p class=\"mt-1 text-lg font-medium text-gray-900\">Rp.200.000</p>\r\n                    </a>\r\n\r\n                    <a href=\"#\" class=\"group\">\r\n                        <div class=\"w-full h-56 bg-gray-200 rounded-md overflow-hidden group-hover:opacity-75 lg:h-72 xl:h-80\">\r\n                            <img src=\"https://nilaigizi.com/assets/images/produk/produk_1535640905.jpeg\" alt=\"Hand holding black machined steel mechanical pencil with brass tip and top.\" class=\"w-full h-full object-center object-cover group-hover:opacity-75\" />\r\n                        </div>\r\n                        <h3 class=\"mt-4 text-sm text-gray-700\">Ikan Hiu</h3>\r\n                        <p class=\"mt-1 text-lg font-medium text-gray-900\">Rp.600.000</p>\r\n                    </a>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TrendingProduct;\r\n\r\n","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\middleware\\guest\\index.js",[],[],"M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\middleware\\auth\\index.js",[],[],"M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\Header.js",["325","326","327","328","329"],[],"M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\Catageory\\Category.js",["330","331","332"],[],"\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Transition } from '@headlessui/react'\r\nimport { ChevronDownIcon } from '@heroicons/react/solid'\r\nimport axios from \"axios\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Notif from '../../components/simple'\r\n\r\nconst categories = [\r\n    {\r\n        name: 'All',\r\n        href: '#product',\r\n        imageSrc: 'https://img.freepik.com/free-photo/top-view-crab-mussels-pan-with-shrimp_23-2148643653.jpg?w=1060',\r\n    },\r\n    {\r\n        name: 'Fish',\r\n        href: '#product',\r\n        imageSrc: 'https://img.freepik.com/free-photo/black-sea-bluefish-black-fish-pattern-with-space-text_91908-516.jpg?w=1060',\r\n    },\r\n    {\r\n        name: 'Mussels',\r\n        href: '#product',\r\n        imageSrc: 'https://img.freepik.com/free-photo/shells-clams-vongole-wooden-cutting-board_89816-23153.jpg?w=1060',\r\n    },\r\n    {\r\n        name: 'Shrimps',\r\n        href: '#product',\r\n        imageSrc: 'https://img.freepik.com/free-photo/raw-shrimps-with-lemon-cherry-tomato-light-plate-copy-space-top-view-appetizing-seafood-snack-restaurant-serving_116547-14482.jpg?w=1060',\r\n    },\r\n    { name: 'Item', href: '#product', imageSrc: 'https://img.freepik.com/free-photo/showcase-with-raw-fish_171337-2422.jpg?t=st=1651806956~exp=1651807556~hmac=47fe8930155e7fa3ff915d656f5382c3b4c810bd9210c2a643c76a0a8abe4a14&w=1060' },\r\n]\r\n\r\n\r\nconst sortOptions = [\r\n    { name: 'Most Expensive', href: '#' },\r\n    { name: 'Most inexpensive', href: '#' },\r\n    { name: 'Best Seller', href: '#' },\r\n    { name: 'Daily Fresh', href: '#' },\r\n    { name: 'Frozen', href: '#' },\r\n\r\n\r\n]\r\n\r\nfunction classNames(...classes) {\r\n    return classes.filter(Boolean).join(' ')\r\n}\r\n\r\nconst Category = () => {\r\n    const userData = JSON.parse(localStorage.getItem('user-data'));\r\n    const token = JSON.parse(localStorage.getItem('token'));\r\n    const [products, setProducts] = useState([])\r\n    const [getCategory, setCategory] = useState('');\r\n    const history = useHistory();\r\n    const [notif, setNotif] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchproducts = async () => {\r\n            const data = await axios.get(\"https://server.seafreshing.com/api/product/get-all-product?page=1=&limit=10\")\r\n            let temp = data.data.product.results;\r\n            setProducts(temp);\r\n        }\r\n        fetchproducts()\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        group();\r\n    }, [getCategory])\r\n\r\n    const group = () => {\r\n        let category = products.filter(product => {\r\n            if (product.category === getCategory) {\r\n                return product;\r\n            }\r\n        })\r\n        return category;\r\n    }\r\n\r\n    const handleCart = async (id) => {\r\n        if (!token) {\r\n            history.push('/login')\r\n        } else {\r\n            let item = [...products];\r\n            let index = item.findIndex(product => product.id === id);\r\n            if (index) {\r\n                try {\r\n                    let response = await axios.patch('https://server.seafreshing.com/api/user/add-freezer', JSON.stringify({\r\n                        'clearPrice': item[index].price.value.replace(/\\D/g, ''),\r\n                        'productId': id,\r\n                        'image': item[index].image[0].imgUrl,\r\n                        'name': item[index].productName,\r\n                        'price': item[index].price.value,\r\n                        'priceUnit': \"Kg\",\r\n                        'productQuantity': 1,\r\n                        'kioskName': item[index].kioskName,\r\n                        'kioskId': item[index].kioskId,\r\n                        'idUser': userData.id,\r\n                        'kioskCity': item[index].kioskDetails[0].city,\r\n                        'minimumOrder': item[index].minimumOrder.total,\r\n                        'isWholesalePrice': item[index].isWholesalePrice,\r\n                        'isChecked': true,\r\n                    }), {\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                            'auth-token': token,\r\n                        }\r\n                    });\r\n                    if (response.data) {\r\n                        setNotif(response.data.msg)\r\n                    }\r\n                } catch (e) {\r\n                    console.log(e)\r\n                    console.log(e.response.data)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                notif && (\r\n                    <Notif title=\"Success\" text={notif} />\r\n                )\r\n            }\r\n            <div className=\"bg-white\">\r\n                <div className=\"py-16 sm:py-24 xl:max-w-7xl xl:mx-auto xl:px-8\">\r\n                    <div className=\"px-4 sm:px-6 sm:flex sm:items-center sm:justify-between lg:px-8 xl:px-0\">\r\n                        <h2 className=\"text-2xl font-extrabold tracking-tight text-gray-900\">Shop by Category</h2>\r\n                    </div>\r\n\r\n                    <div className=\"mt-4 flow-root\">\r\n                        <div className=\"-my-2\">\r\n                            <div className=\"box-content py-2 relative h-80 overflow-x-auto xl:overflow-visible\">\r\n                                <div className=\"absolute min-w-screen-xl px-4 flex space-x-8 sm:px-6 lg:px-8 xl:relative xl:px-0 xl:space-x-0 xl:grid xl:grid-cols-5 xl:gap-x-8\">\r\n                                    {categories.map((category) => (\r\n                                        <a\r\n                                            key={category.name}\r\n                                            href={category.href}\r\n                                            onClick={() => setCategory(category.name)}\r\n                                            className=\"relative w-56 h-80 rounded-lg p-6 flex flex-col overflow-hidden hover:opacity-75 xl:w-auto\"\r\n                                        >\r\n                                            <span aria-hidden=\"true\" className=\"absolute inset-0\">\r\n                                                <img src={category.imageSrc} alt=\"\" className=\"w-full h-full object-center object-cover\" />\r\n                                            </span>\r\n                                            <span\r\n                                                aria-hidden=\"true\"\r\n                                                className=\"absolute inset-x-0 bottom-0 h-2/3 bg-gradient-to-t from-gray-800 opacity-50\"\r\n                                            />\r\n                                            <span className=\"relative mt-auto text-center text-xl font-bold text-white\">{category.name}</span>\r\n                                        </a>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"bg-gray-50\">\r\n                        {/* Mobile filter dialog */}\r\n                        <div className=\"max-w-3xl mx-auto px-4 text-center sm:px-6 lg:max-w-7xl lg:px-8\">\r\n                            <section aria-labelledby=\"filter-heading\" className=\"border-t border-gray-200 py-6\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <Menu as=\"div\" className=\"relative z-10 inline-block text-left\">\r\n                                        <div>\r\n                                            <Menu.Button className=\"group inline-flex justify-center text-sm font-medium text-gray-700 hover:text-gray-900\">\r\n                                                Sort\r\n                                                <ChevronDownIcon\r\n                                                    className=\"flex-shrink-0 -mr-1 ml-1 h-5 w-5 text-gray-400 group-hover:text-gray-500\"\r\n                                                    aria-hidden=\"true\"\r\n                                                />\r\n                                            </Menu.Button>\r\n                                        </div>\r\n\r\n                                        <Transition\r\n                                            as={Fragment}\r\n                                            enter=\"transition ease-out duration-100\"\r\n                                            enterFrom=\"transform opacity-0 scale-95\"\r\n                                            enterTo=\"transform opacity-100 scale-100\"\r\n                                            leave=\"transition ease-in duration-75\"\r\n                                            leaveFrom=\"transform opacity-100 scale-100\"\r\n                                            leaveTo=\"transform opacity-0 scale-95\"\r\n                                        >\r\n                                            <Menu.Items className=\"origin-top-left absolute left-0 z-10 mt-2 w-40 rounded-md shadow-2xl bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\r\n                                                <div className=\"py-1\">\r\n                                                    {sortOptions.map((option) => (\r\n                                                        <Menu.Item key={option}>\r\n                                                            {({ active }) => (\r\n                                                                <a\r\n                                                                    href={option.href}\r\n                                                                    className={classNames(\r\n                                                                        active ? 'bg-gray-100' : '',\r\n                                                                        'block px-4 py-2 text-sm font-medium text-gray-900'\r\n                                                                    )}\r\n                                                                >\r\n                                                                    {option.name}\r\n                                                                </a>\r\n                                                            )}\r\n                                                        </Menu.Item>\r\n                                                    ))}\r\n                                                </div>\r\n                                            </Menu.Items>\r\n                                        </Transition>\r\n                                    </Menu>\r\n                                </div>\r\n                            </section>\r\n                            <div id=\"#product\" className=\"mt-8 grid grid-cols-1 gap-y-12 sm:grid-cols-2 sm:gap-x-6 lg:grid-cols-4 xl:gap-x-8\">\r\n                                {\r\n                                    products.length === 0 ?\r\n                                        <span>Product is empty</span>\r\n                                        :\r\n                                        getCategory ?\r\n                                            getCategory !== 'All' ?\r\n                                                group().map(product => (\r\n                                                    <div key={product.id}>\r\n                                                        <a href={`/DetailProduct/${product.id}`}>\r\n                                                            <div className=\"relative\">\r\n\r\n                                                                <div className=\"relative w-full h-72 rounded-lg overflow-hidden\">\r\n\r\n                                                                    <img\r\n                                                                        src={product.image[0].imgUrl}\r\n                                                                        alt={product.productName}\r\n                                                                        className=\"w-full h-full object-center object-cover\"\r\n                                                                    />\r\n\r\n                                                                </div>\r\n\r\n                                                                <div className=\"relative mt-4\">\r\n                                                                    <h3 className=\"text-sm font-medium text-gray-900\">{product.productName}</h3>\r\n                                                                    <p className=\"mt-1 text-sm text-gray-500\">{product.category}</p>\r\n                                                                </div>\r\n                                                                <div className=\"absolute top-0 inset-x-0 h-72 rounded-lg p-4 flex items-end justify-end overflow-hidden\">\r\n                                                                    <div\r\n                                                                        aria-hidden=\"true\"\r\n                                                                        className=\"absolute inset-x-0 bottom-0 h-36 bg-gradient-to-t from-black opacity-50\"\r\n                                                                    />\r\n                                                                    <p className=\"relative text-lg font-semibold text-white\">{product.price.value}</p>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </a>\r\n                                                        <div className=\"mt-6\">\r\n                                                            <button onClick={() => handleCart(product.id)} class=\"flex items-center justify-center w-full px-2 py-2 mt-4 font-medium tracking-wide text-white capitalize transition-colors duration-200 transform bg-gray-800 rounded-md hover:bg-gray-700 focus:outline-none focus:bg-gray-700\">\r\n                                                                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-5 h-5 mx-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                                                                    <path d=\"M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z\" />\r\n                                                                </svg>\r\n                                                                <span class=\"mx-1\">Add to freezer</span>\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ))\r\n                                                :\r\n                                                products.map((product) => (\r\n                                                    <div key={product.id}>\r\n                                                        <a href={`/DetailProduct/${product.id}`}>\r\n                                                            <div className=\"relative\">\r\n\r\n                                                                <div className=\"relative w-full h-72 rounded-lg overflow-hidden\">\r\n\r\n                                                                    <img\r\n                                                                        src={product.image[0].imgUrl}\r\n                                                                        alt={product.productName}\r\n                                                                        className=\"w-full h-full object-center object-cover\"\r\n                                                                    />\r\n\r\n                                                                </div>\r\n\r\n                                                                <div className=\"relative mt-4\">\r\n                                                                    <h3 className=\"text-sm font-medium text-gray-900\">{product.productName}</h3>\r\n                                                                    <p className=\"mt-1 text-sm text-gray-500\">{product.category}</p>\r\n                                                                </div>\r\n                                                                <div className=\"absolute top-0 inset-x-0 h-72 rounded-lg p-4 flex items-end justify-end overflow-hidden\">\r\n                                                                    <div\r\n                                                                        aria-hidden=\"true\"\r\n                                                                        className=\"absolute inset-x-0 bottom-0 h-36 bg-gradient-to-t from-black opacity-50\"\r\n                                                                    />\r\n                                                                    <p className=\"relative text-lg font-semibold text-white\">{product.price.value}</p>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </a>\r\n                                                        <div className=\"mt-6\">\r\n                                                            <button onClick={() => handleCart(product.id)} class=\"flex items-center justify-center w-full px-2 py-2 mt-4 font-medium tracking-wide text-white capitalize transition-colors duration-200 transform bg-gray-800 rounded-md hover:bg-gray-700 focus:outline-none focus:bg-gray-700\">\r\n                                                                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-5 h-5 mx-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                                                                    <path d=\"M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z\" />\r\n                                                                </svg>\r\n                                                                <span class=\"mx-1\">Add to freezer</span>\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ))\r\n                                            :\r\n                                            products.map((product) => (\r\n                                                <div key={product.id}>\r\n                                                    <a href={`/DetailProduct/${product.id}`}>\r\n                                                        <div className=\"relative\">\r\n\r\n                                                            <div className=\"relative w-full h-72 rounded-lg overflow-hidden\">\r\n\r\n                                                                <img\r\n                                                                    src={product.image[0].imgUrl}\r\n                                                                    alt={product.productName}\r\n                                                                    className=\"w-full h-full object-center object-cover\"\r\n                                                                />\r\n\r\n                                                            </div>\r\n\r\n                                                            <div className=\"relative mt-4\">\r\n                                                                <h3 className=\"text-sm font-medium text-gray-900\">{product.productName}</h3>\r\n                                                                <p className=\"mt-1 text-sm text-gray-500\">{product.category}</p>\r\n                                                            </div>\r\n                                                            <div className=\"absolute top-0 inset-x-0 h-72 rounded-lg p-4 flex items-end justify-end overflow-hidden\">\r\n                                                                <div\r\n                                                                    aria-hidden=\"true\"\r\n                                                                    className=\"absolute inset-x-0 bottom-0 h-36 bg-gradient-to-t from-black opacity-50\"\r\n                                                                />\r\n                                                                <p className=\"relative text-lg font-semibold text-white\">{product.price.value}</p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </a>\r\n                                                    <div className=\"mt-6\">\r\n                                                        <button onClick={() => handleCart(product.id)} class=\"flex items-center justify-center w-full px-2 py-2 mt-4 font-medium tracking-wide text-white capitalize transition-colors duration-200 transform bg-gray-800 rounded-md hover:bg-gray-700 focus:outline-none focus:bg-gray-700\">\r\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-5 h-5 mx-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                                                                <path d=\"M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z\" />\r\n                                                            </svg>\r\n                                                            <span class=\"mx-1\">Add to freezer</span>\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Category;\r\n","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\Banner\\Banner.js",["333"],[],"M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\homeComponents\\ShopSection.js",[],[],"M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\NewArrival\\NewArrival.js",["334"],[],"\r\nconst NewArrival = () => {\r\n    return (\r\n        <section class=\"bg-white dark:bg-gray-900\">\r\n            {/* <div class=\"container px-6 py-8 mx-auto \">\r\n                <div class=\"lg:flex lg:-mx-2 items-center justify-center \">\r\n                    <div class=\"mt-6 lg:mt-0 lg:px-2 lg:w-4/5 \">\r\n                        <div className=\"px-4 sm:px-6 sm:flex sm:items-center sm:justify-between lg:px-8 xl:px-0\">\r\n                            <h2 className=\"text-2xl font-extrabold tracking-tight text-gray-900\">New Arrival</h2>\r\n                        </div>\r\n                        <div class=\"flex items-center justify-between text-sm tracking-widest uppercase \">\r\n                            <p class=\"mt-3 text-gray-500 dark:text-gray-300\">4 Items</p>\r\n                        </div>\r\n\r\n                        <div class=\"grid grid-cols-1 gap-8  mt-8 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 \">\r\n                            <div class=\"flex flex-col items-center justify-center w-full max-w-lg mx-auto\">\r\n                                <img class=\"object-cover w-full rounded-md h-72 xl:h-80\" src=\"https://previews.123rf.com/images/yelenayemchuk/yelenayemchuk1804/yelenayemchuk180400072/98705622-salmon-fresh-salmon-fish-raw-salmon-fish-fillet.jpg?fj=1\" alt=\"T-Shirt\" />\r\n                                <h4 class=\"mt-2 text-lg font-medium text-gray-700 dark:text-gray-200\">Salmon Fillet</h4>\r\n                                <p class=\"text-blue-500\">Rp.350.000</p>\r\n\r\n                                <button class=\"flex items-center justify-center w-full px-2 py-2 mt-4 font-medium tracking-wide text-white capitalize transition-colors duration-200 transform bg-gray-800 rounded-md hover:bg-gray-700 focus:outline-none focus:bg-gray-700\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-5 h-5 mx-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                                        <path d=\"M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z\" />\r\n                                    </svg>\r\n                                    <span class=\"mx-1\">Add to freezer</span>\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div class=\"flex flex-col items-center justify-center w-full max-w-lg mx-auto\">\r\n                                <img class=\"object-cover w-full rounded-md h-72 xl:h-80\" src=\"https://dahliagroup.co.id/wp-content/uploads/2019/11/11.-Ikan-kurisi-segar.jpg\" alt=\"T-Shirt\" />\r\n                                <h4 class=\"mt-2 text-lg font-medium text-gray-700 dark:text-gray-200\"> Kurisi Merah</h4>\r\n                                <p class=\"text-blue-500\">Rp.200.000</p>\r\n\r\n                                <button class=\"flex items-center justify-center w-full px-2 py-2 mt-4 font-medium tracking-wide text-white capitalize transition-colors duration-200 transform bg-gray-800 rounded-md hover:bg-gray-700 focus:outline-none focus:bg-gray-700\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-5 h-5 mx-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                                        <path d=\"M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z\" />\r\n                                    </svg>\r\n                                    <span class=\"mx-1\">Add to freezer</span>\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div class=\"flex flex-col items-center justify-center w-full max-w-lg mx-auto\">\r\n                                <img class=\"object-cover w-full rounded-md h-72 xl:h-80\" src=\"https://dahliagroup.co.id/wp-content/uploads/2019/11/19.-Bulu-Babi-atau-landak-laut.jpg\" alt=\"T-Shirt\" />\r\n                                <h4 class=\"mt-2 text-lg font-medium text-gray-700 dark:text-gray-200\">Bulu Babi</h4>\r\n                                <p class=\"text-blue-500\">Rp.200.000</p>\r\n\r\n                                <button class=\"flex items-center justify-center w-full px-2 py-2 mt-4 font-medium tracking-wide text-white capitalize transition-colors duration-200 transform bg-gray-800 rounded-md hover:bg-gray-700 focus:outline-none focus:bg-gray-700\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-5 h-5 mx-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                                        <path d=\"M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z\" />\r\n                                    </svg>\r\n                                    <span class=\"mx-1\">Add to freezer</span>\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div class=\"flex flex-col items-center justify-center w-full max-w-lg mx-auto\">\r\n                                <img class=\"object-cover w-full rounded-md h-72 xl:h-80\" src=\"https://dahliagroup.co.id/wp-content/uploads/2019/11/2.-Ikan-Kerapu-Segar.jpg\" alt=\"T-Shirt\" />\r\n                                <h4 class=\"mt-2 text-lg font-medium text-gray-700 dark:text-gray-200\">Ikan Kerapu</h4>\r\n                                <p class=\"text-blue-500\">Rp.250.000</p>\r\n\r\n                                <button class=\"flex items-center justify-center w-full px-2 py-2 mt-4 font-medium tracking-wide text-white capitalize transition-colors duration-200 transform bg-gray-800 rounded-md hover:bg-gray-700 focus:outline-none focus:bg-gray-700\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-5 h-5 mx-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                                        <path d=\"M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z\" />\r\n                                    </svg>\r\n                                    <span class=\"mx-1\">Add to freezer</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n            <div className=\"bg-white\">\r\n                <div className=\"relative bg-gray-900\">\r\n                    {/* Decorative image and overlay */}\r\n                    <div aria-hidden=\"true\" className=\"absolute inset-0 overflow-hidden\">\r\n                        <img\r\n                            src=\"https://img.freepik.com/free-photo/composition-with-frozen-fish-table_23-2148969392.jpg?t=st=1651834450~exp=1651835050~hmac=67c96fbb604389bf795f5c14b27fd0649a9ea1dfa48a6d3950680b42a7c29a23&w=1380\"\r\n                            alt=\"\"\r\n                            className=\"w-full h-full object-center object-cover\"\r\n                        />\r\n                    </div>\r\n                    <div aria-hidden=\"true\" className=\"absolute inset-0 bg-gray-900 opacity-50\" />\r\n\r\n                    <div className=\"relative max-w-3xl mx-auto py-32 px-6 flex flex-col items-center text-center sm:py-64 lg:px-0\">\r\n                        <h1 className=\"text-4xl font-extrabold tracking-tight text-white lg:text-6xl\">New arrivals are here</h1>\r\n                        <p className=\"mt-4 text-xl text-white\">\r\n                            The new arrivals have, well, newly arrived. Check out the latest options from our summer small-batch release\r\n                            while they're still in stock.\r\n                        </p>\r\n                        <a\r\n                            href=\"#\"\r\n                            className=\"mt-8 inline-block bg-white border border-transparent rounded-md py-3 px-8 text-base font-medium text-gray-900 hover:bg-gray-100\"\r\n                        >\r\n                            Shop New Arrivals\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default NewArrival;","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\simple.jsx",[],[],"M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\CTA\\CTA.js",["335","336"],[],"const CTA = () => {\r\n    return (\r\n        <section class=\"mt-5 bg-white dark:bg-gray-900\">\r\n            <div class=\"container flex flex-col items-center px-4 py-12 mx-auto text-center\">\r\n                <h2 class=\"text-3xl font-bold tracking-tight text-gray-600 dark:text-white\">\r\n                    Try something really different right now.\r\n                </h2>\r\n\r\n                <p class=\"block max-w-2xl mt-4 text-xl text-gray-500 dark:text-gray-300\">Lorem ipsum dolor sit amet consectetur, adipisicing elit. Iusto recusandae tenetur iste quaerat voluptatibus quibusdam nam repudiandae </p>\r\n\r\n                <div class=\"mt-6\">\r\n                    <div class=\"inline-flex w-full overflow-hidden rounded-lg shadow sm:w-auto sm:mx-3\">\r\n                        <a href=\"#\" class=\"inline-flex items-center justify-center w-full px-5 py-3 text-base font-medium text-white bg-gradient-to-r from-gray-700 to-gray-900 hover:from-gray-600 hover:to-gray-600 sm:w-auto\">\r\n                            <svg class=\"w-6 h-6 mx-2 fill-current\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\" xmlSpace=\"preserve\">\r\n                                <g>\r\n                                    <g>\r\n                                        <path d=\"M407,0H105C47.103,0,0,47.103,0,105v302c0,57.897,47.103,105,105,105h302c57.897,0,105-47.103,105-105V105\r\n                                        C512,47.103,464.897,0,407,0z M482,407c0,41.355-33.645,75-75,75H105c-41.355,0-75-33.645-75-75V105c0-41.355,33.645-75,75-75h302\r\n                                        c41.355,0,75,33.645,75,75V407z\"></path>\r\n                                    </g>\r\n                                </g>\r\n                                <g>\r\n                                    <g>\r\n                                        <path d=\"M305.646,123.531c-1.729-6.45-5.865-11.842-11.648-15.18c-11.936-6.892-27.256-2.789-34.15,9.151L256,124.166\r\n                                        l-3.848-6.665c-6.893-11.937-22.212-16.042-34.15-9.151h-0.001c-11.938,6.893-16.042,22.212-9.15,34.151l18.281,31.664\r\n                                        L159.678,291H110.5c-13.785,0-25,11.215-25,25c0,13.785,11.215,25,25,25h189.86l-28.868-50h-54.079l85.735-148.498\r\n                                        C306.487,136.719,307.375,129.981,305.646,123.531z\"></path>\r\n                                    </g>\r\n                                </g>\r\n                                <g>\r\n                                    <g>\r\n                                        <path d=\"M401.5,291h-49.178l-55.907-96.834l-28.867,50l86.804,150.348c3.339,5.784,8.729,9.921,15.181,11.65\r\n                                        c2.154,0.577,4.339,0.863,6.511,0.863c4.332,0,8.608-1.136,12.461-3.361c11.938-6.893,16.042-22.213,9.149-34.15L381.189,341\r\n                                        H401.5c13.785,0,25-11.215,25-25C426.5,302.215,415.285,291,401.5,291z\"></path>\r\n                                    </g>\r\n                                </g>\r\n                                <g>\r\n                                    <g>\r\n                                        <path d=\"M119.264,361l-4.917,8.516c-6.892,11.938-2.787,27.258,9.151,34.15c3.927,2.267,8.219,3.345,12.458,3.344\r\n                                        c8.646,0,17.067-4.484,21.693-12.495L176.999,361H119.264z\"></path>\r\n                                    </g>\r\n                                </g>\r\n                            </svg>\r\n                            <span class=\"mx-2\">\r\n                                Get it on the App Store\r\n                            </span>\r\n                        </a>\r\n                    </div>\r\n\r\n                    <div class=\"inline-flex w-full mt-4 overflow-hidden rounded-lg shadow sm:w-auto sm:mx-3 sm:mt-0\">\r\n                        <a href=\"#\" class=\"inline-flex items-center justify-center w-full px-5 py-3 text-base font-medium text-white transition-colors duration-150 transform sm:w-auto bg-gradient-to-r from-blue-700 to-blue-900 hover:from-blue-600 hover:to-blue-600\">\r\n                            <svg class=\"w-6 h-6 mx-2 fill-current\" viewBox=\"-28 0 512 512.00075\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m432.320312 215.121094-361.515624-208.722656c-14.777344-8.53125-32.421876-8.53125-47.203126 0-.121093.070312-.230468.148437-.351562.21875-.210938.125-.421875.253906-.628906.390624-14.175782 8.636719-22.621094 23.59375-22.621094 40.269532v417.445312c0 17.066406 8.824219 32.347656 23.601562 40.878906 7.390626 4.265626 15.496094 6.398438 23.601563 6.398438s16.214844-2.132812 23.601563-6.398438l361.519531-208.722656c14.777343-8.53125 23.601562-23.8125 23.601562-40.878906s-8.824219-32.347656-23.605469-40.878906zm-401.941406 253.152344c-.21875-1.097657-.351562-2.273438-.351562-3.550782v-417.445312c0-2.246094.378906-4.203125.984375-5.90625l204.324219 213.121094zm43.824219-425.242188 234.21875 135.226562-52.285156 54.539063zm-6.480469 429.679688 188.410156-196.527344 54.152344 56.484375zm349.585938-201.835938-80.25 46.332031-60.125-62.714843 58.261718-60.773438 82.113282 47.40625c7.75 4.476562 8.589844 11.894531 8.589844 14.875s-.839844 10.398438-8.589844 14.875zm0 0\"></path></svg>\r\n                            <span class=\"mx-2\">\r\n                                Get it on Google Play\r\n                            </span>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CTA;","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\profileComponents\\Wishlist.js",[],[],"M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\LoadingError\\Error.js",[],[],"M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\profileComponents\\Orders.js",[],[],"M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\profileComponents\\ProfileTabs.js",[],[],"M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\profileComponents\\Kiosk.js",["337","338","339","340","341"],[],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport Spinner from '../../screens/Spinner';\r\n\r\nconst Kiosk = () => {\r\n    const token = JSON.parse(localStorage.getItem('token'));\r\n    const [getKName, setKName] = useState([]);\r\n    const [getDName, setDName] = useState([]);\r\n    const [kioskName, setKioskName] = useState('');\r\n    const [kioskDomain, setKioskDomain] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [province, setProvince] = useState([]);\r\n    const [regencies, setRegencies] = useState([]);\r\n    const [district, setDistrict] = useState([]);\r\n    const [village, setVillage] = useState([]);\r\n    const [prov, setProv] = useState('');\r\n    const [reg, setReg] = useState('');\r\n    const [dist, setDist] = useState('');\r\n    const [vill, setVill] = useState('');\r\n    const [zipcode, setZipCode] = useState('');\r\n    const [mobilenumber, setMobileNumber] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        getKioskName();\r\n    }, [kioskName])\r\n\r\n    const getKioskName = async () => {\r\n        try {\r\n            let response = await axios.get(`http://103.102.152.201:3001/api/kiosk/check-name/${kioskName}`)\r\n            setKName(response.data);\r\n        } catch (e) {\r\n            if (e) {\r\n                console.log(e)\r\n            } else if (e.response.data) {\r\n                console.log(e.response.data)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDomainName();\r\n    }, [kioskDomain])\r\n\r\n    const getDomainName = async () => {\r\n        try {\r\n            let response = await axios.get(`http://103.102.152.201:3001/api/kiosk/check-domain/${kioskDomain}`)\r\n            setDName(response.data);\r\n        } catch (e) {\r\n            if (e) {\r\n                console.log(e)\r\n            } else if (e.response.data) {\r\n                console.log(e.response.data)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProvince();\r\n    }, [])\r\n\r\n    const getProvince = async () => {\r\n        try {\r\n            let response = await axios.get('http://103.102.152.201:3001/api/list/province')\r\n            setProvince(response.data);\r\n        } catch (e) {\r\n            if (e) {\r\n                console.log(e)\r\n            } else if (e.response.data) {\r\n                console.log(e.response.data)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getRegencies();\r\n    }, [prov])\r\n\r\n    const getRegencies = async () => {\r\n        try {\r\n            let response = await axios.get(`http://103.102.152.201:3001/api/list/regencies/${prov}`)\r\n            setRegencies(response.data);\r\n        } catch (e) {\r\n            if (e) {\r\n                console.log(e)\r\n            } else if (e.response.data) {\r\n                console.log(e.response.data)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDisctrict();\r\n    }, [reg])\r\n\r\n    const getDisctrict = async () => {\r\n        try {\r\n            let response = await axios.get(`http://103.102.152.201:3001/api/list/districts/${reg}`)\r\n            setDistrict(response.data);\r\n        } catch (e) {\r\n            if (e) {\r\n                console.log(e)\r\n            } else if (e.response.data) {\r\n                console.log(e.response.data)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getVillages();\r\n    }, [dist])\r\n\r\n    const getVillages = async () => {\r\n        try {\r\n            let response = await axios.get(`http://103.102.152.201:3001/api/list/villages/${dist}`)\r\n            setVillage(response.data);\r\n        } catch (e) {\r\n            if (e) {\r\n                console.log(e)\r\n            } else if (e.response.data) {\r\n                console.log(e.response.data)\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleCreateKiosk = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        let city = regencies.find(id => id.id === reg);\r\n        let dstrct = district.find(id => id.id === dist);\r\n        let vllgs = village.find(id => id.id === vill);\r\n        let prvnc = province.find(id => id.id === prov);\r\n        let today = new Date();\r\n        let date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n\r\n        let data = new FormData();\r\n        data.append('name', kioskName);\r\n        data.append('domain', kioskDomain);\r\n        data.append('search', kioskName);\r\n        data.append('fullAddress', address);\r\n        data.append('city', city.name);\r\n        data.append('zipcode', zipcode);\r\n        data.append('district', dstrct.name);\r\n        data.append('villages', vllgs.name);\r\n        data.append('province', prvnc.name);\r\n        data.append('mobilenumber', mobilenumber);\r\n        data.append('joinTime', date)\r\n\r\n        try {\r\n            let response = await axios.post('http://103.102.152.201:3001/api/kiosk/open-kiosk', data, {\r\n                headers: {\r\n                    'auth-token': token,\r\n                }\r\n            })\r\n            if (response.data) {\r\n                setLoading(false);\r\n                history.push('/kiosk');\r\n            }\r\n        } catch (e) {\r\n            if (e) {\r\n                console.log(e)\r\n                console.log(e.response.data)\r\n            } else if (e.response.data) {\r\n                console.log(e.response.data)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                loading ?\r\n                    <Spinner />\r\n                    :\r\n                    <>\r\n                        <form onSubmit={handleCreateKiosk} className=\"row  form-container\">\r\n                            <div className='col-md-6'>\r\n                                <div className=\"form\">\r\n                                    <label>Kiosk Name</label>\r\n                                    <input value={kioskName} onChange={(e) => setKioskName(e.target.value)} className=\"form-control\" type=\"text\" required />\r\n                                    {\r\n                                        getKName ?\r\n                                            getKName.code === 10 ?\r\n                                                <p className='text-danger'>{getKName.msg}</p>\r\n                                                :\r\n                                                <p className='text-success'>{getKName.msg}</p>\r\n                                            : \"\"\r\n                                    }\r\n                                    <p>An attractive name will be remembered by buyers.</p>\r\n                                    <p>The name cannot be the same as other kiosks.</p>\r\n                                    <p>The selected kiosk name cannot be edited.</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className='col-md-6'>\r\n                                <div className=\"form\">\r\n                                    <div className='d-flex justify-content-between align-items-center'>\r\n                                        <label>Kiosk Domain</label>\r\n                                        <label>seafreshing.com/</label>\r\n                                    </div>\r\n                                    <input value={kioskDomain} onChange={(e) => setKioskDomain(e.target.value)} className=\"form-control\" type=\"text\" required />\r\n                                    {\r\n                                        getDName ?\r\n                                            getDName.code === 10 ?\r\n                                                <p className='text-danger'>{getDName.msg}</p>\r\n                                                :\r\n                                                <p className='text-success'>{getDName.msg}</p>\r\n                                            : \"\"\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                getKName && getDName ?\r\n                                    getKName.code === 200 && getDName.code === 200 ?\r\n                                        <>\r\n                                            <div className='col-md-6'>\r\n                                                <div className=\"form\">\r\n                                                    <label>Full Address</label>\r\n                                                    <input value={address} onChange={(e) => setAddress(e.target.value)} className=\"form-control\" type=\"text\" required />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='col-md-6'>\r\n                                                <div className=\"form\">\r\n                                                    <label>Provinsi</label>\r\n                                                    {\r\n                                                        province.length === 0 ?\r\n                                                            <label>No data</label>\r\n                                                            :\r\n                                                            <select className='form-select' value={prov} onChange={(e) => setProv(e.target.value)} required>\r\n                                                                <option selected>Open this select menu</option>\r\n                                                                {\r\n                                                                    province.map(province => (\r\n                                                                        <option key={province.id} value={province.id}>{province.name}</option>\r\n                                                                    ))\r\n                                                                }\r\n                                                            </select>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            {\r\n                                                prov && (\r\n                                                    <div className='col-md-6'>\r\n                                                        <div className=\"form\">\r\n                                                            <label>Kota</label>\r\n                                                            {\r\n                                                                regencies.length === 0 ?\r\n                                                                    <label>No data</label>\r\n                                                                    :\r\n                                                                    <select className='form-select' value={reg} onChange={(e) => setReg(e.target.value)} required>\r\n                                                                        <option selected>Open this select menu</option>\r\n                                                                        {\r\n                                                                            regencies.map(regencies => (\r\n                                                                                <option key={regencies.id} value={regencies.id}>{regencies.name}</option>\r\n                                                                            ))\r\n                                                                        }\r\n                                                                    </select>\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                            {\r\n                                                reg && (\r\n                                                    <div className='col-md-6'>\r\n                                                        <div className=\"form\">\r\n                                                            <label>Kecamatan</label>\r\n                                                            {\r\n                                                                district.length === 0 ?\r\n                                                                    <label>No data</label>\r\n                                                                    :\r\n                                                                    <select className='form-select' value={dist} onChange={(e) => setDist(e.target.value)} required>\r\n                                                                        <option selected>Open this select menu</option>\r\n                                                                        {\r\n                                                                            district.map(district => (\r\n                                                                                <option key={district.id} value={district.id}>{district.name}</option>\r\n                                                                            ))\r\n                                                                        }\r\n                                                                    </select>\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                            {\r\n                                                dist && (\r\n                                                    <div className='col-md-6'>\r\n                                                        <div className=\"form\">\r\n                                                            <label>Kelurahan</label>\r\n                                                            {\r\n                                                                village.length === 0 ?\r\n                                                                    <label>No data</label>\r\n                                                                    :\r\n                                                                    <select className='form-select' value={vill} onChange={(e) => setVill(e.target.value)} required>\r\n                                                                        <option selected>Open this select menu</option>\r\n                                                                        {\r\n                                                                            village.map(village => (\r\n                                                                                <option key={village.id} value={village.id}>{village.name}</option>\r\n                                                                            ))\r\n                                                                        }\r\n                                                                    </select>\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                            <div className='col-md-6'>\r\n                                                <div className=\"form\">\r\n                                                    <label>Zip Code</label>\r\n                                                    <input value={zipcode} onChange={(e) => setZipCode(e.target.value)} className=\"form-control\" type=\"text\" required />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='col-md-6'>\r\n                                                <div className=\"form\">\r\n                                                    <label>Mobile Number</label>\r\n                                                    <input value={mobilenumber} onChange={(e) => setMobileNumber(e.target.value)} className=\"form-control\" type=\"text\" required />\r\n                                                </div>\r\n                                            </div>\r\n                                            <button type='submit'>Create Kiosk</button>\r\n                                        </>\r\n                                        :\r\n                                        \"\"\r\n                                    :\r\n                                    \"\"\r\n                            }\r\n                        </form>\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Kiosk","M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\components\\homeComponents\\Rating.js",[],[],"M:\\Work\\Seafresh\\User\\Frontend\\seafreshing\\src\\screens\\Spinner.js",[],[],{"ruleId":"342","severity":1,"message":"343","line":11,"column":8,"nodeType":"344","messageId":"345","endLine":11,"endColumn":22},{"ruleId":"342","severity":1,"message":"346","line":12,"column":8,"nodeType":"344","messageId":"345","endLine":12,"endColumn":21},{"ruleId":"342","severity":1,"message":"347","line":3,"column":27,"nodeType":"344","messageId":"345","endLine":3,"endColumn":36},{"ruleId":"342","severity":1,"message":"348","line":4,"column":10,"nodeType":"344","messageId":"345","endLine":4,"endColumn":14},{"ruleId":"342","severity":1,"message":"349","line":4,"column":16,"nodeType":"344","messageId":"345","endLine":4,"endColumn":26},{"ruleId":"342","severity":1,"message":"350","line":6,"column":10,"nodeType":"344","messageId":"345","endLine":6,"endColumn":15},{"ruleId":"342","severity":1,"message":"351","line":8,"column":7,"nodeType":"344","messageId":"345","endLine":8,"endColumn":21},{"ruleId":"342","severity":1,"message":"352","line":33,"column":10,"nodeType":"344","messageId":"345","endLine":33,"endColumn":15},{"ruleId":"342","severity":1,"message":"353","line":33,"column":17,"nodeType":"344","messageId":"345","endLine":33,"endColumn":25},{"ruleId":"354","severity":1,"message":"355","line":63,"column":34,"nodeType":"356","messageId":"357","endLine":63,"endColumn":36},{"ruleId":"354","severity":1,"message":"355","line":64,"column":31,"nodeType":"356","messageId":"357","endLine":64,"endColumn":33},{"ruleId":"342","severity":1,"message":"358","line":115,"column":11,"nodeType":"344","messageId":"345","endLine":115,"endColumn":15},{"ruleId":"342","severity":1,"message":"359","line":156,"column":13,"nodeType":"344","messageId":"345","endLine":156,"endColumn":17},{"ruleId":"342","severity":1,"message":"360","line":211,"column":11,"nodeType":"344","messageId":"345","endLine":211,"endColumn":20},{"ruleId":"361","severity":1,"message":"362","line":333,"column":23,"nodeType":"363","endLine":333,"endColumn":49},{"ruleId":"342","severity":1,"message":"364","line":343,"column":11,"nodeType":"344","messageId":"345","endLine":343,"endColumn":23},{"ruleId":"365","severity":1,"message":"366","line":491,"column":29,"nodeType":"367","endLine":491,"endColumn":82},{"ruleId":"342","severity":1,"message":"368","line":3,"column":8,"nodeType":"344","messageId":"345","endLine":3,"endColumn":14},{"ruleId":"342","severity":1,"message":"369","line":19,"column":11,"nodeType":"344","messageId":"345","endLine":19,"endColumn":13},{"ruleId":"370","severity":1,"message":"371","line":87,"column":23,"nodeType":"367","endLine":87,"endColumn":121},{"ruleId":"342","severity":1,"message":"372","line":3,"column":8,"nodeType":"344","messageId":"345","endLine":3,"endColumn":19},{"ruleId":"342","severity":1,"message":"369","line":14,"column":9,"nodeType":"344","messageId":"345","endLine":14,"endColumn":11},{"ruleId":"361","severity":1,"message":"373","line":18,"column":6,"nodeType":"374","endLine":18,"endColumn":8,"suggestions":"375"},{"ruleId":"342","severity":1,"message":"376","line":32,"column":11,"nodeType":"344","messageId":"345","endLine":32,"endColumn":19},{"ruleId":"342","severity":1,"message":"377","line":9,"column":10,"nodeType":"344","messageId":"345","endLine":9,"endColumn":18},{"ruleId":"361","severity":1,"message":"378","line":15,"column":6,"nodeType":"374","endLine":15,"endColumn":8,"suggestions":"379"},{"ruleId":"361","severity":1,"message":"380","line":23,"column":6,"nodeType":"374","endLine":23,"endColumn":8,"suggestions":"381"},{"ruleId":"342","severity":1,"message":"348","line":2,"column":10,"nodeType":"344","messageId":"345","endLine":2,"endColumn":14},{"ruleId":"342","severity":1,"message":"368","line":3,"column":8,"nodeType":"344","messageId":"345","endLine":3,"endColumn":14},{"ruleId":"342","severity":1,"message":"382","line":12,"column":9,"nodeType":"344","messageId":"345","endLine":12,"endColumn":16},{"ruleId":"342","severity":1,"message":"383","line":9,"column":7,"nodeType":"344","messageId":"345","endLine":9,"endColumn":18},{"ruleId":"342","severity":1,"message":"384","line":32,"column":11,"nodeType":"344","messageId":"345","endLine":32,"endColumn":16},{"ruleId":"361","severity":1,"message":"385","line":38,"column":8,"nodeType":"374","endLine":38,"endColumn":10,"suggestions":"386"},{"ruleId":"342","severity":1,"message":"383","line":9,"column":7,"nodeType":"344","messageId":"345","endLine":9,"endColumn":18},{"ruleId":"342","severity":1,"message":"387","line":24,"column":7,"nodeType":"344","messageId":"345","endLine":24,"endColumn":15},{"ruleId":"342","severity":1,"message":"388","line":76,"column":9,"nodeType":"344","messageId":"345","endLine":76,"endColumn":17},{"ruleId":"342","severity":1,"message":"389","line":77,"column":17,"nodeType":"344","messageId":"345","endLine":77,"endColumn":25},{"ruleId":"361","severity":1,"message":"390","line":102,"column":6,"nodeType":"374","endLine":102,"endColumn":17,"suggestions":"391"},{"ruleId":"361","severity":1,"message":"392","line":119,"column":6,"nodeType":"374","endLine":119,"endColumn":19,"suggestions":"393"},{"ruleId":"361","severity":1,"message":"394","line":153,"column":6,"nodeType":"374","endLine":153,"endColumn":12,"suggestions":"395"},{"ruleId":"361","severity":1,"message":"396","line":170,"column":6,"nodeType":"374","endLine":170,"endColumn":11,"suggestions":"397"},{"ruleId":"361","severity":1,"message":"398","line":187,"column":6,"nodeType":"374","endLine":187,"endColumn":12,"suggestions":"399"},{"ruleId":"361","severity":1,"message":"400","line":245,"column":6,"nodeType":"374","endLine":245,"endColumn":8,"suggestions":"401"},{"ruleId":"361","severity":1,"message":"402","line":22,"column":8,"nodeType":"374","endLine":22,"endColumn":10,"suggestions":"403"},{"ruleId":"404","severity":1,"message":"405","line":171,"column":41,"nodeType":"367","endLine":171,"endColumn":160},{"ruleId":"361","severity":1,"message":"406","line":17,"column":8,"nodeType":"374","endLine":17,"endColumn":30,"suggestions":"407"},{"ruleId":"354","severity":1,"message":"355","line":73,"column":73,"nodeType":"356","messageId":"357","endLine":73,"endColumn":75},{"ruleId":"365","severity":1,"message":"366","line":126,"column":61,"nodeType":"367","endLine":126,"endColumn":161},{"ruleId":"342","severity":1,"message":"408","line":2,"column":10,"nodeType":"344","messageId":"345","endLine":2,"endColumn":20},{"ruleId":"342","severity":1,"message":"409","line":2,"column":22,"nodeType":"344","messageId":"345","endLine":2,"endColumn":32},{"ruleId":"342","severity":1,"message":"410","line":2,"column":34,"nodeType":"344","messageId":"345","endLine":2,"endColumn":37},{"ruleId":"342","severity":1,"message":"411","line":3,"column":10,"nodeType":"344","messageId":"345","endLine":3,"endColumn":18},{"ruleId":"342","severity":1,"message":"412","line":4,"column":10,"nodeType":"344","messageId":"345","endLine":4,"endColumn":19},{"ruleId":"342","severity":1,"message":"413","line":4,"column":21,"nodeType":"344","messageId":"345","endLine":4,"endColumn":32},{"ruleId":"342","severity":1,"message":"414","line":4,"column":34,"nodeType":"344","messageId":"345","endLine":4,"endColumn":44},{"ruleId":"361","severity":1,"message":"415","line":21,"column":8,"nodeType":"374","endLine":21,"endColumn":10,"suggestions":"416"},{"ruleId":"370","severity":1,"message":"371","line":233,"column":61,"nodeType":"367","endLine":233,"endColumn":107},{"ruleId":"342","severity":1,"message":"383","line":8,"column":7,"nodeType":"344","messageId":"345","endLine":8,"endColumn":18},{"ruleId":"417","severity":1,"message":"418","line":6,"column":73,"nodeType":"419","messageId":"420","endLine":6,"endColumn":98},{"ruleId":"417","severity":1,"message":"418","line":18,"column":51,"nodeType":"419","messageId":"420","endLine":18,"endColumn":73},{"ruleId":"370","severity":1,"message":"421","line":21,"column":29,"nodeType":"367","endLine":21,"endColumn":215},{"ruleId":"370","severity":1,"message":"421","line":33,"column":29,"nodeType":"367","endLine":33,"endColumn":209},{"ruleId":"370","severity":1,"message":"421","line":45,"column":29,"nodeType":"367","endLine":45,"endColumn":215},{"ruleId":"417","severity":1,"message":"418","line":73,"column":89,"nodeType":"419","messageId":"420","endLine":73,"endColumn":111},{"ruleId":"417","severity":1,"message":"418","line":77,"column":116,"nodeType":"419","messageId":"420","endLine":77,"endColumn":141},{"ruleId":"417","severity":1,"message":"418","line":83,"column":116,"nodeType":"419","messageId":"420","endLine":83,"endColumn":141},{"ruleId":"417","severity":1,"message":"418","line":89,"column":116,"nodeType":"419","messageId":"420","endLine":89,"endColumn":141},{"ruleId":"417","severity":1,"message":"418","line":95,"column":116,"nodeType":"419","messageId":"420","endLine":95,"endColumn":141},{"ruleId":"342","severity":1,"message":"422","line":1,"column":10,"nodeType":"344","messageId":"345","endLine":1,"endColumn":18},{"ruleId":"342","severity":1,"message":"423","line":1,"column":20,"nodeType":"344","messageId":"345","endLine":1,"endColumn":35},{"ruleId":"342","severity":1,"message":"424","line":1,"column":37,"nodeType":"344","messageId":"345","endLine":1,"endColumn":46},{"ruleId":"342","severity":1,"message":"425","line":1,"column":48,"nodeType":"344","messageId":"345","endLine":1,"endColumn":61},{"ruleId":"342","severity":1,"message":"408","line":3,"column":10,"nodeType":"344","messageId":"345","endLine":3,"endColumn":20},{"ruleId":"342","severity":1,"message":"348","line":4,"column":10,"nodeType":"344","messageId":"345","endLine":4,"endColumn":14},{"ruleId":"361","severity":1,"message":"402","line":16,"column":8,"nodeType":"374","endLine":16,"endColumn":10,"suggestions":"426"},{"ruleId":"370","severity":1,"message":"421","line":136,"column":29,"nodeType":"367","endLine":139,"endColumn":30},{"ruleId":"370","severity":1,"message":"371","line":205,"column":49,"nodeType":"367","endLine":208,"endColumn":50},{"ruleId":"370","severity":1,"message":"421","line":215,"column":49,"nodeType":"367","endLine":218,"endColumn":50},{"ruleId":"370","severity":1,"message":"371","line":247,"column":21,"nodeType":"367","endLine":247,"endColumn":207},{"ruleId":"370","severity":1,"message":"371","line":248,"column":21,"nodeType":"367","endLine":248,"endColumn":207},{"ruleId":"370","severity":1,"message":"371","line":10,"column":17,"nodeType":"367","endLine":10,"endColumn":127},{"ruleId":"370","severity":1,"message":"371","line":16,"column":17,"nodeType":"367","endLine":16,"endColumn":141},{"ruleId":"370","severity":1,"message":"371","line":22,"column":17,"nodeType":"367","endLine":22,"endColumn":142},{"ruleId":"370","severity":1,"message":"371","line":28,"column":17,"nodeType":"367","endLine":28,"endColumn":141},{"ruleId":"370","severity":1,"message":"371","line":41,"column":17,"nodeType":"367","endLine":41,"endColumn":105},{"ruleId":"370","severity":1,"message":"371","line":42,"column":17,"nodeType":"367","endLine":42,"endColumn":105},{"ruleId":"370","severity":1,"message":"371","line":43,"column":17,"nodeType":"367","endLine":43,"endColumn":105},{"ruleId":"370","severity":1,"message":"371","line":48,"column":17,"nodeType":"367","endLine":48,"endColumn":105},{"ruleId":"370","severity":1,"message":"371","line":49,"column":17,"nodeType":"367","endLine":49,"endColumn":105},{"ruleId":"370","severity":1,"message":"371","line":50,"column":17,"nodeType":"367","endLine":50,"endColumn":105},{"ruleId":"370","severity":1,"message":"371","line":55,"column":17,"nodeType":"367","endLine":55,"endColumn":105},{"ruleId":"370","severity":1,"message":"371","line":56,"column":17,"nodeType":"367","endLine":56,"endColumn":105},{"ruleId":"370","severity":1,"message":"371","line":57,"column":17,"nodeType":"367","endLine":57,"endColumn":105},{"ruleId":"370","severity":1,"message":"371","line":10,"column":21,"nodeType":"367","endLine":10,"endColumn":47},{"ruleId":"370","severity":1,"message":"371","line":18,"column":21,"nodeType":"367","endLine":18,"endColumn":47},{"ruleId":"370","severity":1,"message":"371","line":26,"column":21,"nodeType":"367","endLine":26,"endColumn":47},{"ruleId":"370","severity":1,"message":"371","line":34,"column":21,"nodeType":"367","endLine":34,"endColumn":47},{"ruleId":"370","severity":1,"message":"371","line":66,"column":17,"nodeType":"367","endLine":66,"endColumn":181},{"ruleId":"370","severity":1,"message":"421","line":103,"column":17,"nodeType":"367","endLine":103,"endColumn":20},{"ruleId":"370","severity":1,"message":"421","line":106,"column":17,"nodeType":"367","endLine":106,"endColumn":20},{"ruleId":"370","severity":1,"message":"371","line":127,"column":11,"nodeType":"367","endLine":127,"endColumn":197},{"ruleId":"370","severity":1,"message":"371","line":128,"column":11,"nodeType":"367","endLine":128,"endColumn":197},{"ruleId":"342","severity":1,"message":"348","line":3,"column":10,"nodeType":"344","messageId":"345","endLine":3,"endColumn":14},{"ruleId":"361","severity":1,"message":"427","line":68,"column":8,"nodeType":"374","endLine":68,"endColumn":21,"suggestions":"428"},{"ruleId":"354","severity":1,"message":"429","line":71,"column":48,"nodeType":"356","messageId":"430","endLine":71,"endColumn":50},{"ruleId":"431","severity":1,"message":"432","line":63,"column":21,"nodeType":"367","endLine":63,"endColumn":219},{"ruleId":"370","severity":1,"message":"371","line":89,"column":25,"nodeType":"367","endLine":92,"endColumn":26},{"ruleId":"370","severity":1,"message":"371","line":13,"column":25,"nodeType":"367","endLine":13,"endColumn":226},{"ruleId":"370","severity":1,"message":"371","line":51,"column":25,"nodeType":"367","endLine":51,"endColumn":267},{"ruleId":"361","severity":1,"message":"390","line":28,"column":8,"nodeType":"374","endLine":28,"endColumn":19,"suggestions":"433"},{"ruleId":"361","severity":1,"message":"392","line":45,"column":8,"nodeType":"374","endLine":45,"endColumn":21,"suggestions":"434"},{"ruleId":"361","severity":1,"message":"394","line":79,"column":8,"nodeType":"374","endLine":79,"endColumn":14,"suggestions":"435"},{"ruleId":"361","severity":1,"message":"396","line":96,"column":8,"nodeType":"374","endLine":96,"endColumn":13,"suggestions":"436"},{"ruleId":"361","severity":1,"message":"398","line":113,"column":8,"nodeType":"374","endLine":113,"endColumn":14,"suggestions":"437"},"no-unused-vars","'ShippingScreen' is defined but never used.","Identifier","unusedVar","'ProfileScreen' is defined but never used.","'TrashIcon' is defined but never used.","'Link' is defined but never used.","'useHistory' is defined but never used.","'parse' is defined but never used.","'paymentMethods' is assigned a value but never used.","'kiosk' is assigned a value but never used.","'setKiosk' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'lala' is assigned a value but never used.","'ship' is assigned a value but never used.","'deliveree' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'url' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'handleChange' is assigned a value but never used.","jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","'Header' is defined but never used.","'qs' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'ShopSection' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchproduct'. Either include it or remove the dependency array.","ArrayExpression",["438"],"'response' is assigned a value but never used.","'quantity' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getFreezer'. Either include it or remove the dependency array.",["439"],"React Hook useEffect has missing dependencies: 'getUser' and 'getWishlistData'. Either include them or remove the dependency array.",["440"],"'history' is assigned a value but never used.","'breadcrumbs' is assigned a value but never used.","'token' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSearch'. Either include it or remove the dependency array.",["441"],"'products' is assigned a value but never used.","'userData' is assigned a value but never used.","'setNotif' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getKioskName'. Either include it or remove the dependency array.",["442"],"React Hook useEffect has a missing dependency: 'getDomainName'. Either include it or remove the dependency array.",["443"],"React Hook useEffect has a missing dependency: 'getRegencies'. Either include it or remove the dependency array.",["444"],"React Hook useEffect has a missing dependency: 'getDisctrict'. Either include it or remove the dependency array.",["445"],"React Hook useEffect has a missing dependency: 'getVillages'. Either include it or remove the dependency array.",["446"],"React Hook useEffect has a missing dependency: 'getKioskProduct'. Either include it or remove the dependency array.",["447"],"React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["448"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'getFreezer', 'handleMin', 'handlePlus', and 'totPrice'. Either include them or remove the dependency array.",["449"],"'Disclosure' is defined but never used.","'RadioGroup' is defined but never used.","'Tab' is defined but never used.","'StarIcon' is defined but never used.","'HeartIcon' is defined but never used.","'MinusSmIcon' is defined but never used.","'PlusSmIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'getProduct'. Either include it or remove the dependency array.",["450"],"react/style-prop-object","Style prop value must be an object","JSXAttribute","stylePropNotObject","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'FaSearch' is defined but never used.","'FaCartArrowDown' is defined but never used.","'FaRegBell' is defined but never used.","'FaRegEnvelope' is defined but never used.",["451"],"React Hook useEffect has a missing dependency: 'group'. Either include it or remove the dependency array.",["452"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["453"],["454"],["455"],["456"],["457"],{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"464","fix":"465"},{"desc":"466","fix":"467"},{"desc":"468","fix":"469"},{"desc":"470","fix":"471"},{"desc":"472","fix":"473"},{"desc":"474","fix":"475"},{"desc":"476","fix":"477"},{"desc":"478","fix":"479"},{"desc":"480","fix":"481"},{"desc":"482","fix":"483"},{"desc":"478","fix":"484"},{"desc":"485","fix":"486"},{"desc":"466","fix":"487"},{"desc":"468","fix":"488"},{"desc":"470","fix":"489"},{"desc":"472","fix":"490"},{"desc":"474","fix":"491"},"Update the dependencies array to be: [fetchproduct]",{"range":"492","text":"493"},"Update the dependencies array to be: [getFreezer]",{"range":"494","text":"495"},"Update the dependencies array to be: [getUser, getWishlistData]",{"range":"496","text":"497"},"Update the dependencies array to be: [getSearch]",{"range":"498","text":"499"},"Update the dependencies array to be: [getKioskName, kioskName]",{"range":"500","text":"501"},"Update the dependencies array to be: [getDomainName, kioskDomain]",{"range":"502","text":"503"},"Update the dependencies array to be: [getRegencies, prov]",{"range":"504","text":"505"},"Update the dependencies array to be: [getDisctrict, reg]",{"range":"506","text":"507"},"Update the dependencies array to be: [dist, getVillages]",{"range":"508","text":"509"},"Update the dependencies array to be: [getKioskProduct]",{"range":"510","text":"511"},"Update the dependencies array to be: [getUser]",{"range":"512","text":"513"},"Update the dependencies array to be: [items, finalQuantity, getFreezer, handleMin, handlePlus, totPrice]",{"range":"514","text":"515"},"Update the dependencies array to be: [getProduct]",{"range":"516","text":"517"},{"range":"518","text":"513"},"Update the dependencies array to be: [getCategory, group]",{"range":"519","text":"520"},{"range":"521","text":"501"},{"range":"522","text":"503"},{"range":"523","text":"505"},{"range":"524","text":"507"},{"range":"525","text":"509"},[619,621],"[fetchproduct]",[512,514],"[getFreezer]",[853,855],"[getUser, getWishlistData]",[1162,1164],"[getSearch]",[3733,3744],"[getKioskName, kioskName]",[4141,4154],"[getDomainName, kioskDomain]",[4938,4944],"[getRegencies, prov]",[5337,5342],"[getDisctrict, reg]",[5732,5738],"[dist, getVillages]",[7471,7473],"[getKioskProduct]",[730,732],"[getUser]",[539,561],"[items, finalQuantity, getFreezer, handleMin, handlePlus, totPrice]",[864,866],"[getProduct]",[636,638],[2479,2492],"[getCategory, group]",[1142,1153],[1617,1630],[2548,2554],[3014,3019],[3476,3482]]